<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第8章 算法设计与分析</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC8%E7%AB%A0%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC8%E7%AB%A0%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="第8章算法设计与分析"><a href="#第8章算法设计与分析" class="headerlink" title="第8章算法设计与分析"></a>第8章算法设计与分析</h1><h2 id="一-算法基础知识"><a href="#一-算法基础知识" class="headerlink" title="一 算法基础知识"></a>一 算法基础知识</h2><h3 id="1-算法的特性"><a href="#1-算法的特性" class="headerlink" title="1.  算法的特性"></a>1.  算法的特性</h3><ul><li>算法是对特定问题求解步骤的一种描述,他是指令的有限序列,其中每一条指令表示一个或多个操作.</li><li>1.有穷性.一个算法总是在执行有穷步骤之后结束,且每一步都可在有穷时间内完成.</li><li>2.确定性.算法中的每一条指令必须有确切的含义,理解时不会产生二义性.并且在任何条件下,算法只有唯一的一条路径,即对于相同的输入只能得出相同的输出.</li><li>3.可行性.一个算法是可行的,即算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现.</li><li>4.输入.一个算法有零个或多个输入,这些输入取决于某个特定的对象的集合.</li><li>5.输出.一个算法有一个或多个输出,这些输出是同输入有着某些特定关系的量.</li></ul><h3 id="2-算法分析"><a href="#2-算法分析" class="headerlink" title="2.  算法分析"></a>2.  算法分析</h3><ul><li><p>时间复杂度<br><img src="/./images/8-10.png" alt="软件设计师教程知识点整理"></p><blockquote><p>时间复杂度是一个大概的规模表示，一遍以循环次数表示，O（n）说明时间是n的正比，log对数的时间复杂度一般在查找二叉树的算法中出现。渐进符号O表示一个渐进变化程度，实际变化必须小于等于O括号内的渐进变化度。</p></blockquote></li><li><p>空间复杂度<br><img src="/./images/8-11.png" alt="软件设计师教程知识点整理"></p></li></ul><h2 id="二-算法分析基础：查找算法"><a href="#二-算法分析基础：查找算法" class="headerlink" title="二 算法分析基础：查找算法"></a>二 算法分析基础：查找算法</h2><h3 id="1-顺序查找"><a href="#1-顺序查找" class="headerlink" title="1. 顺序查找"></a>1. 顺序查找</h3><ul><li>顺序查找: 将查找的关键字key从头到尾与表中的元素进行比较,存在则返回成功,否则失败</li><li>时间复杂度为O(n),按照顺序依次超找一遍</li></ul><h3 id="2-拆半（二分）查找"><a href="#2-拆半（二分）查找" class="headerlink" title="2.  拆半（二分）查找"></a>2.  拆半（二分）查找</h3><p><img src="/./images/8-12.png" alt="软件设计师教程知识点整理"></p><h3 id="3-Hash-哈希超找"><a href="#3-Hash-哈希超找" class="headerlink" title="3.  Hash 哈希超找"></a>3.  Hash 哈希超找</h3><p><img src="/./images/8-13.png" alt="软件设计师教程知识点整理"></p><blockquote><p>哈希查找冲突处理方法：<br>1)线性探测，存储到下一个空闲物理空间；<br>2)伪随机数法，存储到任意空闲存储位置；<br>3)再次hash散列计算，使用新计算的位置存储</p></blockquote><h2 id="三-排序算法"><a href="#三-排序算法" class="headerlink" title="三 排序算法"></a>三 排序算法</h2><ul><li><p>稳定排序与不稳定排序：依据是两个相同的值在排序后的相对位置是否发生了变化。如果发生了变化为不稳定，不发生变化为稳定</p></li><li><p>内排序和外排序：依据是排序在内存中进行还是在外部进行</p></li><li><p>排序算法分类：</p><ul><li>插入类排序：直接插入排序，shell希尔排序</li><li>选择类排序：直接选择排序，堆排序</li><li>交换类排序：冒泡排序，快速排序</li><li>其它：归并排序，基数排序</li></ul></li><li><p>排序算法：时间复杂度总结<br><img src="/./images/8-9.png" alt="软件设计师教程知识点整理"></p></li></ul><h3 id="1-直接插入排序"><a href="#1-直接插入排序" class="headerlink" title="1. 直接插入排序"></a>1. 直接插入排序</h3><ul><li>是一种简单的排序算法。具体做法是在插入第i个元素时，前面的已经排好序，然后将i与前面的元素依次比较，插入到比i大的值前面，i的插入位置后面的元素依次后移<br><img src="/./images/8-1.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-SHELL-希尔排序"><a href="#2-SHELL-希尔排序" class="headerlink" title="2.  SHELL 希尔排序"></a>2.  SHELL 希尔排序</h3><ul><li>将待排序的元素分割成若干个子序列，然后分别进行直接插入排序  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">分组方法示例：</span><br><span class="line">待排序元素为n=10个，取一个小于 n 的整数 d （依次减小d，d按照一定的规律增量排列，例如 5,3,1）</span><br><span class="line">元素按照 5 为间距进行分组，对每个分好组的元素使用直接插入排序</span><br><span class="line">元素按照 3 为间距再次分组，每个分好组的元素使用直接插入排序</span><br><span class="line">元素按照 1 为间距再次分组，每个分好组的元素使用直接插入排序</span><br></pre></td></tr></table></figure><img src="/./images/8-2.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="3-直接选择排序"><a href="#3-直接选择排序" class="headerlink" title="3.  直接选择排序"></a>3.  直接选择排序</h3><ul><li>n 个待排序元素：i 与 i后的元素进行比较，从n-i+1个元素中找出最小的，并和第 i 个元素交换，当i等于n时记录有序排列</li><li>本质就是选择出最小的元素进行交换，主要是选择过程，交换过程只有一次<br><img src="/./images/8-3.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="4-堆排序"><a href="#4-堆排序" class="headerlink" title="4.  堆排序"></a>4.  堆排序</h3><p><img src="/./images/8-4.png" alt="软件设计师教程知识点整理"></p><h3 id="5-冒泡排序"><a href="#5-冒泡排序" class="headerlink" title="5.  冒泡排序"></a>5.  冒泡排序</h3><p><img src="/./images/8-5.png" alt="软件设计师教程知识点整理"></p><h3 id="6-快速排序"><a href="#6-快速排序" class="headerlink" title="6.  快速排序"></a>6.  快速排序</h3><p><img src="/./images/8-6.png" alt="软件设计师教程知识点整理"></p><h3 id="7-归并排序"><a href="#7-归并排序" class="headerlink" title="7.  归并排序"></a>7.  归并排序</h3><p><img src="/./images/8-7.png" alt="软件设计师教程知识点整理"></p><h3 id="6-基数排序"><a href="#6-基数排序" class="headerlink" title="6.  基数排序"></a>6.  基数排序</h3><p><img src="/./images/8-8.png" alt="软件设计师教程知识点整理"></p><h2 id="四-常用算法策略"><a href="#四-常用算法策略" class="headerlink" title="四 常用算法策略"></a>四 常用算法策略</h2><h3 id="1-分治法"><a href="#1-分治法" class="headerlink" title="1.  分治法"></a>1.  分治法</h3><p>1.1 递归概念</p><ul><li><p>是指程序（函数）直接调用自己或通过一些列调用语句简介调用自己，是一种描述问题和解决问题的常用方法</p></li><li><p>基本要素：边界条件（确定递归合适终止，即递归出口）；递归模式（即递归体）</p></li></ul><p>1.2 分治法的思想概念</p><ul><li>对于一个规模为n的问题，若该问题可以容易的解决则直接解决；否则将其分解为k个规模更小的子问题，这些子问题互相独立且与原问题形式相同，递归的解决这些问题，然后将各个子问题的解合并得到原问题的解。</li></ul><p>1.3 分治法的步骤</p><ul><li>分解问题–&gt;求解（递归地求解各子问题，若子问题足够小，则直接求解）–&gt;合并（将各子问题合并成原问题的解）</li></ul><p>1.4 凡是涉及到分组解决的都是分治法（二分查找，归并排序等）</p><h3 id="2-回溯法"><a href="#2-回溯法" class="headerlink" title="2.  回溯法"></a>2.  回溯法</h3><ul><li>有通用的解题方法之称，可以系统地搜索一个问题的所有解或任意解。</li><li>在包含问题的所有解的空间树中，按照深度优先的策略，从根节点触发搜索解空间树。搜索到任一结点时，总是先判断该节点是否肯定不包含问题的解，如果不包含则跳过对该节点的子树的搜索，逐层向祖先节点回溯；否则进入该子树，继续按深度优先的策略进行搜索。</li><li>可以理解为深度优先搜索，一直向下探测，当此路不通时，返回上一层探索另外的分支，重复此步骤，这就是回溯，意为先一直探测，当不成功时再返回上一层。</li><li>一般用于解决迷宫类的问题。</li></ul><h3 id="3-动态规划法"><a href="#3-动态规划法" class="headerlink" title="3.  动态规划法"></a>3.  动态规划法</h3><ul><li><p>在求解问题中，对于每一步决策列出各种可能的局部解，再依据某种判定条件，舍弃哪些肯定不能得到最优解的局部解，在每一步都经过筛选，以每一步都是最优解来保证全局是最优解</p></li><li><p>本质也是将复杂的问题划分为一个个子问题，与分治法不同的是每一个子问题间不是相互独立的，并且不全都相同。</p></li><li><p>常用于求解具有某种最优性质的问题。</p></li><li><p>此算法将大量精力放在前期构造表格上面，其会对每一步，列出各种可能的答案，这些答案会存储起来，最终要得出某个结果时，是通过查询这张表来得到的，动态规划法不但每一步最优，全局也最优。</p></li></ul><h3 id="4-贪心法"><a href="#4-贪心法" class="headerlink" title="4.  贪心法"></a>4.  贪心法</h3><ul><li><p>总是做出在当前来说最好的选择，而并不从整体上加以考虑，它2所做的每部选择只是当前步骤的局部最优选择，但从整体来说不一定是最优的选择。由于它不必为了寻找最优解而穷尽所有可能解，因此耗费时间少，一般可以快速得到满意的解，但得不到最优解。</p></li><li><p>局部贪心，只针对当前的步骤取最优，而非整体考虑。</p></li><li><p>判断此类算法，就看算法是否是每一步都取最优，并且整体题意没有透露出最终结果是最优的。</p></li></ul><h3 id="5-分支限界法"><a href="#5-分支限界法" class="headerlink" title="5.  分支限界法"></a>5.  分支限界法</h3><p><img src="/./images/8-14.png" alt="软件设计师教程知识点整理"></p><h3 id="6-概率算法"><a href="#6-概率算法" class="headerlink" title="6.  概率算法"></a>6.  概率算法</h3><p><img src="/./images/8-15.png" alt="软件设计师教程知识点整理"></p><h3 id="7-近似算法"><a href="#7-近似算法" class="headerlink" title="7.  近似算法"></a>7.  近似算法</h3><p><img src="/./images/8-16.png" alt="软件设计师教程知识点整理"></p><h3 id="8-数据挖掘算法"><a href="#8-数据挖掘算法" class="headerlink" title="8.  数据挖掘算法"></a>8.  数据挖掘算法</h3><p><img src="/./images/8-17.png" alt="软件设计师教程知识点整理"></p><h3 id="9-智能优化算法"><a href="#9-智能优化算法" class="headerlink" title="9.  智能优化算法"></a>9.  智能优化算法</h3><p><img src="/./images/8-18.png" alt="软件设计师教程知识点整理"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第9章 数据库技术基础</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC9%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC9%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="第9章-数据库技术基础"><a href="#第9章-数据库技术基础" class="headerlink" title="第9章 数据库技术基础"></a>第9章 数据库技术基础</h1><h2 id="一-数据库基本概念"><a href="#一-数据库基本概念" class="headerlink" title="一 数据库基本概念"></a>一 数据库基本概念</h2><h3 id="1-数据库系统DBS"><a href="#1-数据库系统DBS" class="headerlink" title="1. 数据库系统DBS"></a>1. 数据库系统DBS</h3><ul><li>组成：数据库（数据集合）、硬件、软件、人员</li><li>分类：<ul><li>关系型数据库（oracle&#x2F;sybase&#x2F;sql server&#x2F;mysql）</li><li>面向对象型数据库（OODBS）</li><li>对象关系型数据库（ORDBS）</li></ul></li></ul><h3 id="2-数据库系统体系结构"><a href="#2-数据库系统体系结构" class="headerlink" title="2. 数据库系统体系结构"></a>2. 数据库系统体系结构</h3><ul><li>集中式数据库系统</li><li>客户端&#x2F;服务器结构</li><li>并行数据库系统</li><li>分布式数据库系统<ul><li>局部数据库位于不同的物理位置，使用一个全局DBMS将所有局部数据库联网管理，就是分布式数据库</li></ul></li></ul><h3 id="3-数据库的三级模式和两级映像"><a href="#3-数据库的三级模式和两级映像" class="headerlink" title="3. 数据库的三级模式和两级映像"></a>3. 数据库的三级模式和两级映像</h3><ul><li><p>外模式：对应数据库中的<strong>视图</strong>这个级别,将表进行一定的处理后再提供给用户使用。</p></li><li><p>模式： 称为概念模式，就是通常使用的<strong>表</strong>这个级别，根据应用、需求将物理数据划分成一张张表。</p></li><li><p>内模式：管理如何存储物理的数据，对数据的存储方式、优化、存放等。</p></li><li><p>外模式–模式 映像：是视图和表之间的映射，存在于概念级和外部级之间，若表中数据发生了修改，只需要修改此映射，而无需修改引用程序。</p></li><li><p>模式–内模式 映像：是表和数据的物理存储之间的映射，存在于概念级和内部级之间，若修改了数据存储方式，只需要修改此映射，而不需要去修改应用程序。<br><img src="/./images/9-1.png" alt="软件设计师教程知识点整理"></p></li></ul><h2 id="二-数据模型"><a href="#二-数据模型" class="headerlink" title="二 数据模型"></a>二 数据模型</h2><blockquote><p>数据模型的三要素：数据结构、数据操作、数据的约束条件</p></blockquote><h3 id="E-R模型图"><a href="#E-R模型图" class="headerlink" title="E-R模型图"></a>E-R模型图</h3><p><img src="/./images/9-2.png" alt="软件设计师教程知识点整理"></p><ul><li>联系分为三种<ul><li>1:1 联系，联系可以放到任意的两端实体中，作为一个属性</li><li>1:N 联系，联系可以单独作为一个关系模型，也可以在N端中加入1端实体的主键</li><li>M:N 联系，联系必须作为一个单独的关系模型，其主键是M和N端的联合主键</li></ul></li><li>每个实体都对应一个关系模型</li></ul><h2 id="三-关系代数运算"><a href="#三-关系代数运算" class="headerlink" title="三 关系代数运算"></a>三 关系代数运算</h2><ul><li>数据库中代数运算概念 <ul><li>并：结果是两张表中所有记录数合并，相同记录只显示一次</li><li>交：结果是两张表中相同的记录</li><li>差：S1-S2,结果是S1表中有而S2中没有的那些记录<br><img src="/./images/9-3.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h3 id="1-笛卡尔积："><a href="#1-笛卡尔积：" class="headerlink" title="1. 笛卡尔积："></a>1. 笛卡尔积：</h3><ul><li><code>s1*s2，产生的结果如下图，包括s1和s2所有的属性列，并且s1中每条记录依次和s2中每条记录组合成一条记录，最终属性列为s1+s2属性列，记录数为s1*s2</code><br><img src="/./images/9-4.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-投影：实际是按条件选择某关系模式中的某列，列也可以用数字表示"><a href="#2-投影：实际是按条件选择某关系模式中的某列，列也可以用数字表示" class="headerlink" title="2. 投影：实际是按条件选择某关系模式中的某列，列也可以用数字表示"></a>2. 投影：实际是按条件选择某关系模式中的某列，列也可以用数字表示</h3><p><img src="/./images/9-5.png" alt="软件设计师教程知识点整理"></p><h3 id="3-选择：实际是按照条件选择某关系模式中的某条记录"><a href="#3-选择：实际是按照条件选择某关系模式中的某条记录" class="headerlink" title="3. 选择：实际是按照条件选择某关系模式中的某条记录"></a>3. 选择：实际是按照条件选择某关系模式中的某条记录</h3><p><img src="/./images/9-6.png" alt="软件设计师教程知识点整理"></p><h3 id="4-连接：结果与笛卡尔积类似，但是相同名称的属性列只显示一次"><a href="#4-连接：结果与笛卡尔积类似，但是相同名称的属性列只显示一次" class="headerlink" title="4. 连接：结果与笛卡尔积类似，但是相同名称的属性列只显示一次"></a>4. 连接：结果与笛卡尔积类似，但是相同名称的属性列只显示一次</h3><h3 id="5-自然连接：结果是显示全部的属性列，但是相同属性列只显示一次，显示两个关系模式中属性相同且值相同的记录"><a href="#5-自然连接：结果是显示全部的属性列，但是相同属性列只显示一次，显示两个关系模式中属性相同且值相同的记录" class="headerlink" title="5. 自然连接：结果是显示全部的属性列，但是相同属性列只显示一次，显示两个关系模式中属性相同且值相同的记录"></a>5. 自然连接：结果是显示全部的属性列，但是相同属性列只显示一次，显示两个关系模式中属性相同且值相同的记录</h3><p><img src="/./images/9-7.png" alt="软件设计师教程知识点整理"></p><h2 id="四-SQL语句"><a href="#四-SQL语句" class="headerlink" title="四 SQL语句"></a>四 SQL语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#创建表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>;</span><br><span class="line">#指定主键</span><br><span class="line"><span class="keyword">primary</span> key();</span><br><span class="line">#指定外键</span><br><span class="line"><span class="keyword">foreign</span> key();</span><br><span class="line">#修改表</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span>;</span><br><span class="line">#删除表</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span>;</span><br><span class="line">#索引index，视图<span class="keyword">view</span></span><br><span class="line">#数据库查询</span><br><span class="line"><span class="keyword">select</span> ... <span class="keyword">from</span> ... <span class="keyword">where</span>;</span><br><span class="line">#分组查询,<span class="keyword">select</span> 后的列名要使用分组，条件选择使用 <span class="keyword">having</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> .... <span class="keyword">having</span> .....</span><br><span class="line">#更名运算 <span class="keyword">as</span></span><br><span class="line">#字符皮牌</span><br><span class="line"><span class="keyword">like</span> ,<span class="operator">%</span>匹配多个字符 , _ 匹配一个字符</span><br><span class="line">#数据库插入</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> ... <span class="keyword">values</span>();</span><br><span class="line">#数据库删除</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> ... <span class="keyword">where</span> ...;</span><br><span class="line">#数据库修改</span><br><span class="line"><span class="keyword">update</span> ... <span class="keyword">set</span> ... <span class="keyword">where</span> ...;</span><br><span class="line">#排序 </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">asc</span> <span class="operator">|</span> <span class="keyword">desc</span> ;</span><br><span class="line"># 授权</span><br><span class="line"><span class="keyword">grant</span> .... <span class="keyword">on</span> ... <span class="keyword">to</span> </span><br><span class="line">#收回权限</span><br><span class="line"><span class="keyword">revoke</span> ... <span class="keyword">on</span> ... <span class="keyword">from</span>;</span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option #检查<span class="keyword">where</span>后的谓语条件</span><br><span class="line"><span class="keyword">DISTINCT</span> # 过滤重复选项，指保留一条记录</span><br><span class="line"><span class="keyword">UNION</span> #出现在连个<span class="keyword">sql</span>语句之间，将两个结果取或运算，即存在于第一句或第二句的都会被选出</span><br><span class="line"><span class="keyword">INTERSECT</span> #出现在连个<span class="keyword">sql</span>语句之间，对两个语句的查询结果与运算，同时存在于两个语句之间才被选出</span><br></pre></td></tr></table></figure><h2 id="五-关系数据库的规范化"><a href="#五-关系数据库的规范化" class="headerlink" title="五 关系数据库的规范化"></a>五 关系数据库的规范化</h2><h3 id="1-函数依赖"><a href="#1-函数依赖" class="headerlink" title="1. 函数依赖"></a>1. 函数依赖</h3><p><img src="/./images/9-8.png" alt="软件设计师教程知识点整理"></p><h3 id="2-规范化"><a href="#2-规范化" class="headerlink" title="2. 规范化"></a>2. 规范化</h3><ul><li>用途： 解决数据冗余、更新异常、插入异常、删除异常</li><li>键和约束<ul><li>超键：能唯一标识此表的属性的组合</li><li>候选键：超键中去掉冗余的属性，剩余的属性就是候选键</li><li>主键：候选键任选一个可以作为主键</li><li>外键：其他表中的主键<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">候选键求法：根据依赖集画出有向图，从入度为0的节点开始，找出图中一个节点或者一个节点组合，能够遍历完整个图，就是候选键</span><br><span class="line">实体完整性约束：即主键约束，主键不能为空，也不能重复</span><br><span class="line">参照完整性约束：即外键约束，外键必须是其他表中已经存在的主键的值，或者为空</span><br></pre></td></tr></table></figure><img src="/./images/9-9.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h5 id="2-1-第一范式：1NF-所有属性都不可以在分割为两个或多个分量"><a href="#2-1-第一范式：1NF-所有属性都不可以在分割为两个或多个分量" class="headerlink" title="2.1 第一范式：1NF 所有属性都不可以在分割为两个或多个分量"></a>2.1 第一范式：1NF 所有属性都不可以在分割为两个或多个分量</h5><h5 id="2-2-第二方式：2NF-在1DF基础上，每一个非主属性完全依赖主键-（不存在部分依赖）"><a href="#2-2-第二方式：2NF-在1DF基础上，每一个非主属性完全依赖主键-（不存在部分依赖）" class="headerlink" title="2.2 第二方式：2NF 在1DF基础上，每一个非主属性完全依赖主键 （不存在部分依赖）"></a>2.2 第二方式：2NF 在1DF基础上，每一个非主属性完全依赖主键 <strong>（不存在部分依赖）</strong></h5><h5 id="2-3-第三范式：3NF-在2NF基础上-非主属性不传递依赖于候选键（主键组合），主键直接决定非主属性"><a href="#2-3-第三范式：3NF-在2NF基础上-非主属性不传递依赖于候选键（主键组合），主键直接决定非主属性" class="headerlink" title="2.3 第三范式：3NF 在2NF基础上,非主属性不传递依赖于候选键（主键组合），主键直接决定非主属性"></a>2.3 第三范式：3NF 在2NF基础上,非主属性不传递依赖于候选键（主键组合），主键直接决定非主属性</h5><h5 id="2-4-BCNF范式：BCNF-在2NF基础上-所有属性都不传递依赖于候选键"><a href="#2-4-BCNF范式：BCNF-在2NF基础上-所有属性都不传递依赖于候选键" class="headerlink" title="2.4 BCNF范式：BCNF 在2NF基础上,所有属性都不传递依赖于候选键"></a>2.4 BCNF范式：BCNF 在2NF基础上,所有属性都不传递依赖于候选键</h5><h5 id="2-5-第四范式：4NF-在3NF基础上-删除所有多对多关系"><a href="#2-5-第四范式：4NF-在3NF基础上-删除所有多对多关系" class="headerlink" title="2.5 第四范式：4NF 在3NF基础上,删除所有多对多关系"></a>2.5 第四范式：4NF 在3NF基础上,删除所有多对多关系</h5><h3 id="3-模式分解"><a href="#3-模式分解" class="headerlink" title="3. 模式分解"></a>3. 模式分解</h3><ul><li><p>模式之间的转黄一般都是通过拆分属性，即模式分解，将具有部分函数依赖和传递依赖的属性分离出来，来达到一步步优化，一般分为两种</p></li><li><p>3.1 保持函数依赖分解</p><ul><li>对于关系模型R，有依赖集F,若对R进行分解，分解出阿里的多个关系模型保持原来的依赖集不变，则为保持函数依赖的分解。分解后通过产地依赖实现属性的跨表函数依赖也是可以的。</li></ul></li><li><p>3.2 无损分解</p><ul><li>将关系R分解成多个关系莫时候，还能还原成原来的关系模式R,这就是无损分解<br><img src="/./images/9-10.png" alt="软件设计师教程知识点整理"></li><li>无损分解定理：R 分解为{R1,R2},F为满足R所满足的函数依赖集合，分解p具有无损连接性的充分必要条件是R1∩R2-&gt;(R1-R2) R2∩R2-&gt;(R2-R1)</li></ul></li></ul><h2 id="六-数据库的控制和功能"><a href="#六-数据库的控制和功能" class="headerlink" title="六 数据库的控制和功能"></a>六 数据库的控制和功能</h2><h3 id="1-事物管理"><a href="#1-事物管理" class="headerlink" title="1. 事物管理"></a>1. 事物管理</h3><p><img src="/./images/9-11.png" alt="软件设计师教程知识点整理"></p><ul><li>X锁，排它锁：若事务T对数据对象A将X锁，则只允许T读取和修改A，其它事物都不能在对A加任何类型的锁，直到T释放A上的锁</li><li>S锁，共享锁：若事务T对数据对象A加上S锁，则只允许T读取A，但不能修改A，其它事物只能再对A加S锁，直到T释放A上的S锁</li><li>解锁的时间不同，会造成预防问题的个数不同，即为不同的封锁协议。</li></ul><h3 id="2-数据库故障和备份"><a href="#2-数据库故障和备份" class="headerlink" title="2. 数据库故障和备份"></a>2. 数据库故障和备份</h3><p><img src="/./images/9-12.png" alt="软件设计师教程知识点整理"><br><img src="/./images/9-13.png" alt="软件设计师教程知识点整理"></p><h3 id="3-并发控制"><a href="#3-并发控制" class="headerlink" title="3. 并发控制"></a>3. 并发控制</h3><p><img src="/./images/9-14.png" alt="软件设计师教程知识点整理"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第1章计算机系统知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC1%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第1章-计算机系统知识"><a href="#第1章-计算机系统知识" class="headerlink" title="第1章 计算机系统知识"></a>第1章 计算机系统知识</h1><h2 id="一-计算机硬件组成"><a href="#一-计算机硬件组成" class="headerlink" title="一 计算机硬件组成"></a>一 计算机硬件组成</h2><h4 id="1-五大组成部件"><a href="#1-五大组成部件" class="headerlink" title="1. 五大组成部件"></a>1. 五大组成部件</h4><ul><li>运算器</li><li>控制器</li><li>存储器（内存、外存、cache）</li><li>输入设备</li><li>输出设备<br>CPU &#x3D; 运算器 + 控制器<br>主机 &#x3D; CPU + 存储器</li></ul><h4 id="2-中央处理器-CPU"><a href="#2-中央处理器-CPU" class="headerlink" title="2. 中央处理器 CPU"></a>2. 中央处理器 CPU</h4><ul><li><p>组成：运算器、控制器、寄存器组、内部总线</p></li><li><p>功能：程序控制，操作控制，时间控制，数据处理功能</p></li><li><p>运算器组成（执行算数和逻辑运算，并进行逻辑测试，如与或非比较等）</p><ul><li>算数逻辑单元ALU：实现对数据的算数和运算逻辑</li><li>累积寄存器AC：运算结果和源操作数的存放区</li><li>数据缓冲寄存器DR：暂时存放内存指令和数据</li><li>状态条件寄存器PSW：保存运行结果的条件码内容</li></ul></li><li><p>控制器组成：（控制整个CPU的工作，最为重要，包括程序控制、时序控制等）</p><ul><li>指令寄存器IR：暂存CPU执行指令</li><li>程序计数器PC：存放指令执行地址</li><li>地址寄存器AR：保存当前CPU所访问内存地址</li><li>指令译码器ID：分析指令操作码<br><img src="/./images/d1-1.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h4 id="3-存储器"><a href="#3-存储器" class="headerlink" title="3. 存储器"></a>3. 存储器</h4><ul><li>存储器结构（速度从高到低）：寄存器 – 高速缓存Cache – 主存 – 外存</li></ul><h2 id="二-计算机体系结构"><a href="#二-计算机体系结构" class="headerlink" title="二 计算机体系结构"></a>二 计算机体系结构</h2><h4 id="1-计算机体系结构分类"><a href="#1-计算机体系结构分类" class="headerlink" title="1. 计算机体系结构分类"></a>1. 计算机体系结构分类</h4><ul><li>Flynn分类法<br><img src="/./images/d1-4.png" alt="软件设计师教程知识点整理"></li></ul><h4 id="2-指令系统"><a href="#2-指令系统" class="headerlink" title="2. 指令系统"></a>2. 指令系统</h4><ul><li>复杂指令系统 CISC ： 兼容性强，长度可变，有微程序实现</li><li>精简指令系统 RISC：指令少，使用频率接近，主要依靠硬件实现<br><img src="/./images/d1-2.png" alt="软件设计师教程知识点整理"></li></ul><h4 id="3-指令流水线原理"><a href="#3-指令流水线原理" class="headerlink" title="3. 指令流水线原理"></a>3. 指令流水线原理</h4><ul><li><p>RISC流水线技术</p><ul><li>1)超流水线（时间换空间）</li><li>2)超标量（空间换时间）</li><li>3)超长指令字VLIM(执行多条指令，发挥软件作用)<br><img src="/./images/d1-3.png" alt="软件设计师教程知识点整理"></li></ul></li><li><p>流水线时间计算：</p>  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设：总指令数为 n ; 单条指令总执行时间为 t单 ; 单条指令在流水线中耗时时间最长段时间 t周</span><br><span class="line">流水线周期： 指令执行时耗时最长的那个时间段 公式为： t周</span><br><span class="line">流水线执行总时间： 单条指令总执行时间 + （指令数 - 1） * 流水线周期 公式为： t总 = t单 + （n-1）* t周</span><br><span class="line">流水线吞吐率： 总指令数 / 流水线执行总时间 公式为：( n / t总 ) = ( n / t单 + （n-1）* t周 )</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-总线结构"><a href="#3-总线结构" class="headerlink" title="3. 总线结构"></a>3. 总线结构</h4><ul><li>按功能分：总线的分类：数据总线（DB），地址总线（AB），控制总线（CB）</li><li>按位置分：<ul><li>内部总线（处理器内部通信总线）</li><li>外部总线（设备一级的总线，计算机外部设通信的总线）</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第3章 数据结构</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC3%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="第3章-数据结构"><a href="#第3章-数据结构" class="headerlink" title="第3章 数据结构"></a>第3章 数据结构</h1><h2 id="一-线性结构"><a href="#一-线性结构" class="headerlink" title="一.线性结构"></a>一.线性结构</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h3><ul><li>每个元素最多只有一个出度和一个入度,表现为一条线装.线性表按照存储范式分为顺序表和链表.</li></ul><h3 id="2-存储结构"><a href="#2-存储结构" class="headerlink" title="2. 存储结构"></a>2. 存储结构</h3><ul><li>顺序存储: 用一组地址联系度的存储单元一次存储线性表中的数据元素,使得逻辑上相邻的元素物理上也相邻</li><li>链式存储: 存储各数据元素的结点的地址并不要求是连续的,数据元素逻辑上相邻,物理上分开</li></ul><h3 id="3-线性表"><a href="#3-线性表" class="headerlink" title="3. 线性表"></a>3. 线性表</h3><ul><li><p>顺序存储和链式存储的对比<br><img src="/./images/3-1.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-2.png" alt="软件设计师教程知识点整理"></p></li><li><p>空间性能: 因为链表还要存储指针,所以有空间浪费的情况,因此密度小与顺序存储,因为可以动态改变容量分配更优化</p></li><li><p>时间方面: 因为指针的存在,每次查找需要耗费更多的时间,因此读取和查找顺序表更优,但是删除和插入因为顺序表每次操作完后需要依次前移或后移,因此链式更优</p></li></ul><h3 id="4-单链表-线性表的一种"><a href="#4-单链表-线性表的一种" class="headerlink" title="4. 单链表(线性表的一种)"></a>4. 单链表(线性表的一种)</h3><ul><li>单链表的插入和删除<br><img src="/./images/3-3.png" alt="软件设计师教程知识点整理"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">上图中p所执行的节点后插入s指向的节点,操作为:(像是变量赋值)</span><br><span class="line">s-&gt;next = p -&gt;next;</span><br><span class="line">p-&gt;next=s;</span><br><span class="line">同理,在单链表中删除p所指向节点的后继节点q时,操作为:</span><br><span class="line">p-&gt;next=p-&gt;next-&gt;next;</span><br><span class="line">free(q)</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-栈和队列"><a href="#5-栈和队列" class="headerlink" title="5. 栈和队列"></a>5. 栈和队列</h3><ul><li><p>队列: 先进先出,分队尾和队头</p></li><li><p>栈: 先进后出,只有栈顶能进出<br><img src="/./images/3-4.png" alt="软件设计师教程知识点整理"></p></li><li><p>循环队列: 当指针指向第一个元素,尾指针指向最后一个元素的下一个位置,因此队列空时:head&#x3D;tail,队列满时:head&#x3D;tail,这样就无法区分了.因此队列少存一个元素,这样队列满时:tail+1&#x3D;head.而考虑是循环队列,必须除以最大元素数来取余数,即(tail+1)%size&#x3D;head.</p></li><li><p>循环队列长度公式为:(Q.tail-Q.head)%size</p></li><li><p>优先队列: 元素被赋予优先级.当访问元素时,具有最高优先级的元素最先删除.使用堆来存储,因为其不是按照元素进队列的顺序决定的.</p></li></ul><h3 id="6-串"><a href="#6-串" class="headerlink" title="6. 串"></a>6. 串</h3><p>字符串是一种特殊的线性表,其数据元素都为字符<br>子串: 长度为0的字符串,没有任何字符.<br>空格串: 有一个或多个空格组成的串,空格是空白字符串,占一个字符长度<br>子串: 串中任意长度的连续字符构成的序列成为子串.含有子串的串为主串,空串是任意串的子串<br>串的模式匹配算法: 子串的定位操作,用于查找子串在串中第一次出现的位置的算法.<br>基本的模式匹配算法: 也称为布鲁特一福斯算法,子串从头依次开始匹配,直到匹配成功就称为子串<br>KMP算法: 是对基本模式匹配算法的改进: 每当匹配过程中出现相比较的字符不相等时,不需要回溯主串的字符位置指针,而是利用已经得到的”部分匹配”结果将模式串向有”滑动”尽可能远的距离,再继续比较.</p><h3 id="7-数组"><a href="#7-数组" class="headerlink" title="7. 数组"></a>7. 数组</h3><ul><li>数组是定长线性表的扩展,N维数组是一个”同构”的数据结构,其每个数据元素类型相同,结构一致<br><img src="/./images/3-5.png" alt="软件设计师教程知识点整理"><br>可以表示为行向量形式或者列向量形式线性表,单个关系最多只有一个前驱和一个后继,本质是线性的.</li><li>数组结构特点: 元素数目固定,元素类型相同,下标关系具有上下界的约束且有下标序列一般不做插入和删除运算,适用于顺序结构</li><li>数组存储地址计算: 假设每个元素占用存储长度len,起始地址a<br><img src="/./images/3-6.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="8-矩阵"><a href="#8-矩阵" class="headerlink" title="8. 矩阵"></a>8. 矩阵</h3><ul><li>特殊矩阵: 矩阵中的元素(或非0的元素)的分布有一定的规律.常见的特殊矩阵有对称矩阵,三角矩阵,对角矩阵</li><li>稀疏矩阵: 在一个矩阵中,若非零元素的个数远远少于零元素个数,且非零元素的分布没有规律.</li><li>存储方式为三元组结构,即存储每个非零元素的(行,列,值)<br><img src="/./images/3-7.png" alt="软件设计师教程知识点整理"></li></ul><h2 id="二-广义表"><a href="#二-广义表" class="headerlink" title="二.广义表"></a>二.广义表</h2><h3 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1. 概念:"></a>1. 概念:</h3><p>广义表是线性表的推广,是由0个或多个单元素或字表组成的有限序列.</p><h3 id="2-广义表与线性表的区别"><a href="#2-广义表与线性表的区别" class="headerlink" title="2. 广义表与线性表的区别:"></a>2. 广义表与线性表的区别:</h3><ul><li>线性表的元素都是结构上不可分得单元素,而广义表的元素即可以单元素,也可以是有结构的表.</li><li>广义表一般记为: LS&#x3D;(a1,a2,a3,…..an)</li><li>广义表中,LS 是表名,ai是表元素,它可以是子表,也可以是单元素.</li><li>n是广义表的长度,n&#x3D;0的广义表为空表;而递归意义的重数就是广义表的深度,即定义中包含括号的重数(单边括号的个数, 原子的深度是0, 空表的深度为1 )</li><li>head()取表头:<br>可以是第一个表元素,也可以是子表也可以是单元素</li><li>tail()取表尾:<br>除了第一个表元素,其它所有表元素构成的表称为表尾.非空广义表的表尾必定是一个表,即使表尾是单元素</li></ul><h2 id="三-树"><a href="#三-树" class="headerlink" title="三.树"></a>三.树</h2><h3 id="1-概念-2"><a href="#1-概念-2" class="headerlink" title="1. 概念:"></a>1. 概念:</h3><ul><li>树结构是一种非线性结构,树中的每一个数据元素可以有两个或两个以上的直接后继元素,用来描述层次结构关系</li><li>树是n个节点的有限集合(n&gt;&#x3D;0),单n&#x3D;0时称为空树,在任一颗费空树中,有且仅有一个根节点;其余节点可分为m(m&gt;0)个互不相交的有限子集T1,T2,….Tm其中每个Ti又都是一棵树,并且成为根节点的子树.<br><img src="/./images/3-8.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-9.png" alt="软件设计师教程知识点整理"></li></ul><h2 id="四-二叉树"><a href="#四-二叉树" class="headerlink" title="四.二叉树"></a>四.二叉树</h2><h3 id="1-二叉树概念"><a href="#1-二叉树概念" class="headerlink" title="1. 二叉树概念"></a>1. 二叉树概念</h3><ul><li>二叉树是个n个节点的有限集合,它或者是空树,或者是一个节点及两颗互不相交的且分别成为左,右子树的二叉树所组成.与树的区别在于每个根节点最多只有两个孩子节点.</li><li>二叉树的特性:<br><img src="/./images/3-10.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-二叉树的存储结构"><a href="#2-二叉树的存储结构" class="headerlink" title="2. 二叉树的存储结构"></a>2. 二叉树的存储结构</h3><ul><li><p>二叉树的存储结构</p><ul><li>用一组连续的存储单元,从上到下,从左到右依次存储每个节点<br><img src="/./images/3-11.png" alt="软件设计师教程知识点整理"></li><li>深度为K的完全二叉树,除k层外,其余每层 中节点数都是上一层的两倍,因此,从一个节点的标号可推知其双亲,左海子,右孩子节点的编号.<br>假设节点为i</li></ul></li><li><p>二叉树的链式存储结构<br>一般用二叉树表来存储二叉树节点,二叉树表中除了节点本身的数据外,还存储有左孩子节点的指针,右孩子节点的指针,即有一个数据+两个指针.<br>每个二叉链表节点存储一个二叉树节点,头指针则指向根节点.</p></li></ul><h3 id="3-二叉树的遍历"><a href="#3-二叉树的遍历" class="headerlink" title="3. 二叉树的遍历"></a>3. 二叉树的遍历</h3><p><img src="/./images/3-12.png" alt="软件设计师教程知识点整理"></p><h3 id="4-线索二叉树"><a href="#4-线索二叉树" class="headerlink" title="4. 线索二叉树"></a>4. 线索二叉树</h3><ul><li><p>使用线索二叉树目的:<br>获取节点的前驱后后继信息</p></li><li><p>使用线索二叉树原因:<br>二叉树的链式存储只能获取到某节点的左孩子和右孩子节点,无法获取其遍历时的前驱和后继节点.因此可以在链式存储中增加两个指针域,使其分别指向前驱和后继节点,但是这样太浪费存储空间</p></li><li><p>可考虑以下实现方法:<br>若N个节点的二叉树使用二叉链表存储,必然有N+1个空指针域,利用这些空指针来存放节点的前驱和后继节点信息,为此,需要增加两个标志,以区分指针域存放的到底是孩子几点还是遍历节点,如下:<br><img src="/./images/3-13.png" alt="软件设计师教程知识点整理"></p></li></ul><h3 id="5-最优二叉树"><a href="#5-最优二叉树" class="headerlink" title="5. 最优二叉树"></a>5. 最优二叉树</h3><ul><li>哈夫曼树: 最优二叉树</li><li>路径: 两个节点之间的通路</li><li>节点路径长度: 路径上的分支数目</li><li>权: 节点代表的值</li><li>节点带全路径长度: 节点路径长度 * 节点的值</li><li>数的路径长度: 根节点-&gt;每一个子节点路径长度 之和</li><li>输的带权路径长度(输的代价) : 所有子节点带权路径长度 之和<br><img src="/./images/3-14.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-15.png" alt="软件设计师教程知识点整理"></li></ul><h2 id="五-树和森林"><a href="#五-树和森林" class="headerlink" title="五.树和森林"></a>五.树和森林</h2><h3 id="1-树的存储结构"><a href="#1-树的存储结构" class="headerlink" title="1.树的存储结构"></a>1.树的存储结构</h3><ul><li>双亲表示法: 用一组连续的地址单元存储树的节点,并在每个节点中附带一个指示器,指出其双亲节点所在数组元素的下标.</li><li>孩子表示法: 在存储结构中用指针指出节点的每个孩子,为树中的每个节点的孩子建立一个链表.</li><li>孩子兄弟表示法: 又称为二叉链表表示法,为每个存储节点设置两个指针域,分别指向该节点的第一个孩子和下一个兄弟节点.</li></ul><h3 id="2-树和森林的遍历"><a href="#2-树和森林的遍历" class="headerlink" title="2.树和森林的遍历"></a>2.树和森林的遍历</h3><p>由于树中的每个节点可能有多个子树,因此遍历树的方法有两种:<br>先根遍历: 先访问根节点,再依次遍历根的各颗子树.<br>后根遍历: 先遍历根的各颗子树,再访问根节点.<br>森林中有很多颗树,森林的遍历方法也分为两种,与树的遍历类似,就是对森林中的每颗树都依次做先根遍历或后根遍历.</p><h3 id="3-树和二叉树的转换"><a href="#3-树和二叉树的转换" class="headerlink" title="3.树和二叉树的转换"></a>3.树和二叉树的转换</h3><p>规则是: 树的最左边节点作为二叉树的左子树,树的其他兄弟节点作为二叉树的右子树节点.<br>示例如下图: 采用连线法,将最左边节点和其兄弟节点都连接起来,而原来的父节点和兄弟节点的连线则断开,这种方法最简单:<br><img src="/./images/3-16.png" alt="软件设计师教程知识点整理"></p><h3 id="4-查找二叉树"><a href="#4-查找二叉树" class="headerlink" title="4.查找二叉树"></a>4.查找二叉树</h3><p>查找二叉树上的每个节点都存储一个值,且每个节点的所有左孩子节点值都小于父节点值,而所有右孩子节点值都大于父节点值,是一个有规则排列的二叉树,这种数据结构可以方便查找,插入等数据操作.<br>二叉排序树的查找效率取决于二叉排序树的深度,对于结点个数相同的二叉排序树,平衡二叉树的深度最小,而单枝树的深度是最大的,故效率是最差的.<br><img src="/./images/3-17.png" alt="软件设计师教程知识点整理"></p><h3 id="5-平衡二叉树"><a href="#5-平衡二叉树" class="headerlink" title="5.平衡二叉树"></a>5.平衡二叉树</h3><p>平衡二叉树: 特点是所有左子树值小于根节点值,所有右子树值大于根节点值,而这个节点可以构造出多个不同的二叉树,并不唯一,因此提出平衡二叉的概念.在查找二叉树的特点基础上,要求每个节点的平衡度只能为0或1或-1.<br>节点的左右子树深度就是其左右子树各自的层数,而后将左子树深度减去右子树深度,就得到了该节点的平衡度,因此,平衡二叉树就是任意左右子树层次相差不超过1</p><h2 id="六-图"><a href="#六-图" class="headerlink" title="六.图"></a>六.图</h2><p><img src="/./images/3-18.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-19.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-24.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-25.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-20.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-21.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-22.png" alt="软件设计师教程知识点整理"><br><img src="/./images/3-23.png" alt="软件设计师教程知识点整理"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第2章 程序设计语言基础知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC2%E7%AB%A0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第2章-程序设计语言基础知识"><a href="#第2章-程序设计语言基础知识" class="headerlink" title="第2章 程序设计语言基础知识"></a>第2章 程序设计语言基础知识</h1><h2 id="一-程序设计语言概述"><a href="#一-程序设计语言概述" class="headerlink" title="一  程序设计语言概述"></a>一  程序设计语言概述</h2><ul><li>程序设计语言是为了书写计算机程序而人为设计的符号语言，用于对计算过程进行描述、组织和推导</li></ul><h3 id="1-各语言特点"><a href="#1-各语言特点" class="headerlink" title="1. 各语言特点"></a>1. 各语言特点</h3><ul><li>低级语言：机器语言（计算机硬件只能识别0和1的指令程序），汇编语言</li><li>高级语言：功能更强，抽象级别更高，与人们使用的自然语言比较接近</li></ul><table width="568">    <tbody>        <tr class="firstRow">            <td width="568" valign="top" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">Fortran<span style="font-family:宋体">语言，科学计算，执行效率高</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">Pascal<span style="font-family:宋体">语言，为教学而开发的，表达能力强，</span><span style="font-family:Calibri">delphi</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">C<span style="font-family:宋体">语言，指针操作能力强，高效</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">Lisp<span style="font-family:宋体">语言，函数式程序语言，符号处理，人工智能</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">C++<span style="font-family:宋体">语言，面向对象，高效</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">Java<span style="font-family:宋体">语言，面向对象，中间代码，跨平台</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">C#<span style="font-family:宋体">语言，面向对象，中间代码，</span><span style="font-family:Calibri">.NET</span></span>                </p>            </td>        </tr>        <tr>            <td width="568" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">Prolog<span style="font-family:宋体">语言，逻辑推理，间接性，表达能力强，数据库和专家系统</span></span>                </p>            </td>        </tr>    </tbody></table><h3 id="2-解释和编译"><a href="#2-解释和编译" class="headerlink" title="2. 解释和编译"></a>2. 解释和编译</h3><ul><li>都是将高级语言翻译成计算机硬件认识的及其语言。</li><li>编译：生成独立的可执行文件，直接运行，运行时无法控制源程序，效率高。</li><li>解释：不生成可执行文件，可以逐条解释执行，用于调试模式，可以控制源程序，因为还需要控制程序，因此执行速度慢，相对于编译效率低。</li></ul><h3 id="3-程序语言组成"><a href="#3-程序语言组成" class="headerlink" title="3. 程序语言组成"></a>3. 程序语言组成</h3><ul><li>语法（一组规则）</li><li>语义（语法成分的含义）</li><li>语用（构成语言的各个记号和使用者的关系）</li></ul><h2 id="二．程序设计语言的基本成分"><a href="#二．程序设计语言的基本成分" class="headerlink" title="二．程序设计语言的基本成分"></a>二．程序设计语言的基本成分</h2><h3 id="1-数据成分"><a href="#1-数据成分" class="headerlink" title="1.  数据成分"></a>1.  数据成分</h3><p>是一种程序设计语言的数据和数据类型，数据分为常量（程序运行时不可改变）、变量（可以改变）、全局量（存储空间在静态数据区分配）、局部量（存储空间在堆栈区分配）</p><h3 id="2-数据类型有："><a href="#2-数据类型有：" class="headerlink" title="2.  数据类型有："></a>2.  数据类型有：</h3><p>整型、字符型、双精度、单精度浮点型、布尔型等</p><h3 id="3-运算成分："><a href="#3-运算成分：" class="headerlink" title="3.  运算成分："></a>3.  运算成分：</h3><p>指明允许使用的运算符号即运算规则，包括算数运算、逻辑运算、关系运算、位运算等。</p><h3 id="4-控制成分："><a href="#4-控制成分：" class="headerlink" title="4.  控制成分："></a>4.  控制成分：</h3><p>指明语言允许标书的控制结构。包括顺序结构、选择结构、循环结构（初始化+循环体+循环条件）<br><img src="/./images/2-2.png" alt="软件设计师教程知识点整理"></p><h3 id="5-传输成分："><a href="#5-传输成分：" class="headerlink" title="5.  传输成分："></a>5.  传输成分：</h3><p>指明语言允许的数据传输方式。如：赋值处理、数据的输入输出等</p><h3 id="6-函数："><a href="#6-函数：" class="headerlink" title="6.  函数："></a>6.  函数：</h3><p>C程序有一个或多个函数组成，每个函数都有一个名字，其中有且仅有一个名字为main函数作为运行时的起点。函数式程序模块的主要成分，是一段具有独立功能的程序。函数使用涉及三个概念：函数定义、函数声明（先声明后使用）、函数调用</p><h3 id="7-调用："><a href="#7-调用：" class="headerlink" title="7 调用："></a>7 调用：</h3><ul><li>传值调用：将实参的值传递给形参，形参的改变不会导致调用点所传的实参的值改变。实参可是是合法的变量、常量、表达式</li><li>传址调用：即引用调用，将实参的地址传值给形参，即相当于实参存储单元的地址引用，因此其值改变的同时就改变了实参的值，实参不能为常-量，只能是合法的变量和表达式。</li><li>因此，在编程时，要改变参数值，就传址，不改变，就传值</li></ul><h2 id="三．编译程序基本原理"><a href="#三．编译程序基本原理" class="headerlink" title="三．编译程序基本原理"></a>三．编译程序基本原理</h2><h3 id="1-功能："><a href="#1-功能：" class="headerlink" title="1.  功能："></a>1.  功能：</h3><p>是把高级语言书写的程序翻译成汇编语言或机器语言<br>分为6个阶段：</p><ul><li>1.词法分析：对源程序字符进行扫描根据构词规则识别单词（也称单词符号或符号）</li><li>2.语法分析：逻辑阶段，根据识别的单词组合成各类语法短语，如：程序，语句，表达式等，分析判断源程序在结构是否正确</li><li>3.语义分析：逻辑阶段，对结构上正确的源程序进行上下文有关性质的审查。如：类型匹配、除法除数不为0等。分为静态语义错误（编译阶段能够发现）、动态语义错误（运行时能发现）</li><li>4.中间代码和目标代码生成：中间代码是语义分析产生的需要经过优化链接，最终生成可执行的目标代码。引入中间代码的目的是进行与机器无关的代码优化处理。常用的中间代码有后缀式（逆波兰式）、三元式（三地址码）、四元式和树等形式。<br><img src="/./images/2-2.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-文法定义："><a href="#2-文法定义：" class="headerlink" title="2.  文法定义："></a>2.  文法定义：</h3><ul><li><p>2.1 形式文法四元组G&#x3D;（V,T,S,P）<br>  1.S: 文法开始符号<br>  2.V: 不是语言组成部分，可理解为占位符；非终结符：能够推导出其他元素<br>  3.P：产生式。用终结符替代非终结符的规则；即非终结符推导出终结符的公式<br>  4.T: 终结符，语言组成部分，是最终结果；不能推导出其他元素</p></li><li><p>2.2 闭包：如下图，一般闭包可以为0个的情况代付运算<br><img src="/./images/2-4.png" alt="软件设计师教程知识点整理"></p></li><li><p>2.3 文法类型：<br><img src="/./images/2-5.png" alt="软件设计师教程知识点整理"></p><ul><li>1型 -》 语义分析（上下文有关）</li><li>2型 -》 语法分析（上下文无关）</li></ul></li></ul><h2 id="四．正规式"><a href="#四．正规式" class="headerlink" title="四．正规式"></a>四．正规式</h2><p><img src="/./images/2-6.png" alt="软件设计师教程知识点整理"></p><h2 id="五．有限自动机"><a href="#五．有限自动机" class="headerlink" title="五．有限自动机"></a>五．有限自动机</h2><p><img src="/./images/2-7.png" alt="软件设计师教程知识点整理"></p><h3 id="例：如下图：S-开始，ACB转换，F-两个圈是最终结果"><a href="#例：如下图：S-开始，ACB转换，F-两个圈是最终结果" class="headerlink" title="例：如下图：S 开始，ACB转换，F 两个圈是最终结果"></a>例：如下图：S 开始，ACB转换，F 两个圈是最终结果</h3><p><img src="/./images/2-8.png" alt="软件设计师教程知识点整理"></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">S输入1，得到A输入0 得到F</span><br><span class="line">S输入1，得到A输入1 ,得到C输入0,1 得到F</span><br><span class="line">S输入0，得到B输入0 得到F</span><br><span class="line">S输入0，得到B输入1，得到C输入0,1 得到F</span><br><span class="line">每一条线路都是唯一的，得出此图为确定有限自动机</span><br></pre></td></tr></table></figure><ul><li><p>确定有限自动机：输入同一个值，得出的后继是唯一的</p></li><li><p>不确定的有限自动机：输入同一个值，得出多个后继,下面例子是不确定的</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：S输入1，得到B</span><br><span class="line">S输入1，得到A</span><br></pre></td></tr></table></figure></li></ul><h2 id="六．语法分析方法"><a href="#六．语法分析方法" class="headerlink" title="六．语法分析方法"></a>六．语法分析方法</h2><h3 id="1-自上而下语法分析："><a href="#1-自上而下语法分析：" class="headerlink" title="1. 自上而下语法分析："></a>1. 自上而下语法分析：</h3><p>最左推导，从左至右。给定文法G和源程序串r,从G的开始符号出S出发，通过反复使用产生式对举行中的非终结符进行替换（推导），逐步推出r<br>递归下降：利用函数之间的递归调用模拟语法树自上而下的构造过程，是一种自上而下的语法分析方法</p><h3 id="2-自下而上语法分析："><a href="#2-自下而上语法分析：" class="headerlink" title="2. 自下而上语法分析："></a>2. 自下而上语法分析：</h3><p>最右推导，从右至左<br>移进-归约思想：设置一个栈，将输入符号逐个移进栈中，栈顶形成某产生式的又不时，就用左部去替换，称为归约。从右部推导出左部，是一种自下而上的语法分析方法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第4章 计算机操作系统知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC4%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC4%E7%AB%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第4章-计算机操作系统知识"><a href="#第4章-计算机操作系统知识" class="headerlink" title="第4章 计算机操作系统知识"></a>第4章 计算机操作系统知识</h1><h2 id="一-操作系统知识基础"><a href="#一-操作系统知识基础" class="headerlink" title="一. 操作系统知识基础"></a>一. 操作系统知识基础</h2><ul><li>特征：并发性、共享性、虚拟性、不确定性</li><li>功能：进程管理、存储管理、文件管理、作业管理</li><li>分类：批处理操作系统、分时操作系统、实施操作系统、网络操作体统、分布式操作系统、微机操作系统、嵌入式操作系统<blockquote><p>嵌入式操作系统初始化过程按照自底向上、从硬件到软件次序：芯片级初始化（微处理的初始化）-&gt;板级初始化（板卡和其它硬件设备初始化）-&gt;系统初始化（软件及操作系统）</p></blockquote></li></ul><h2 id="二-进程管理"><a href="#二-进程管理" class="headerlink" title="二.  进程管理"></a>二.  进程管理</h2><h3 id="1-进程的组成和状态"><a href="#1-进程的组成和状态" class="headerlink" title="1. 进程的组成和状态"></a>1. 进程的组成和状态</h3><ul><li><p>进程的组成：进程控制快PCB(唯一标志)、程序(描述进程要做什么)、数据(存放进程执行时所需数据)</p></li><li><p>进程的三态图和五态图<br><img src="/./images/4-8.png" alt="软件设计师教程知识点整理"></p></li><li><p>进程前趋图和进程资源图<br><img src="/./images/4-9.png" alt="软件设计师教程知识点整理"></p><ul><li>进程阻塞：资源已全部分配完，进程请求资源无法获取，如上图P2</li><li>非阻塞节点：资源还有剩余，进程请求资源可以分配，进程能够执行，如上图P1、p3</li><li>死锁：当一个资源图中所有进程都是阻塞节点时，进入死锁状态</li></ul></li></ul><h3 id="2-进程间的同步和互斥"><a href="#2-进程间的同步和互斥" class="headerlink" title="2. 进程间的同步和互斥"></a>2. 进程间的同步和互斥</h3><p><img src="/./images/4-10.png" alt="软件设计师教程知识点整理"></p><h3 id="3-死锁问题"><a href="#3-死锁问题" class="headerlink" title="3. 死锁问题"></a>3. 死锁问题</h3><ul><li>死锁产生的四个必要条件：资源互斥、每个进程占有资源并等待其他资源、系统不能剥夺进程资源、进程资源图是一个环路</li><li>死锁资源计算<ul><li>有n个进程，每个进程需要R个资源，其发生死锁的最大资源数为 <code>n * (R-1)</code></li><li>不发生死锁的最小资源数为 <code>n * (R-1) + 1</code></li></ul></li></ul><h2 id="三-存储管理"><a href="#三-存储管理" class="headerlink" title="三.  存储管理"></a>三.  存储管理</h2><ul><li>主要是 主存 和 外存之间的管理（就是内存和硬盘之间的数据置换）</li><li>地址重定位：将逻辑地址转为实际物理地址的过程，分为静态重定位（程序运行前已经装入主存）、动态重定位（边运行边转换）</li></ul><h3 id="1-分区存储"><a href="#1-分区存储" class="headerlink" title="1.  分区存储"></a>1.  分区存储</h3><ul><li>静态分区，动态分区，重定位分区</li><li>将某进程运行需要的内存整体一起分配给它</li><li>缺点：进程需要的内存比较大时无法满足，进程无法运行</li></ul><h3 id="2-页式存储"><a href="#2-页式存储" class="headerlink" title="2.  页式存储"></a>2.  页式存储</h3><ul><li><p>页式存储是： 逻辑页号 对应 物理块号（页帧号）</p></li><li><p>页号：对应物理块号，位数表示了有多少页（16-31；16位 2的16方个页面）</p></li><li><p>页内地址：物理偏移地址，位数表示了每个页的大小（0-15；16位 2的16方&#x3D;64KB）每个页的大小是固定一样的<br><img src="/./images/4-1.png" alt="软件设计师教程知识点整理"></p></li><li><p>快表：是一种很快的页面</p><ul><li>是一种小容量的相联存储器，有快速存储器组成，按内容访问，速度快，快且可以从硬件上保证内容并行查找，一般用来存放当前访问最频繁的少数活动页面的页号</li><li>快表是将页面存储于cache中；慢表将页面存储于内存上</li><li>快表是访问一次cache和一次内存，因此更快（chche取页号组成物理地址，内存取页内地址数据）；慢表需要访问两次内存才能取出页（内存取页号组成物理地址，内存取页内地址数据）</li></ul></li></ul><h3 id="3-段式存储"><a href="#3-段式存储" class="headerlink" title="3.  段式存储"></a>3.  段式存储</h3><ul><li>页式存储是： 逻辑页号 对应 物理块号（页帧号）</li><li>段号：对应物理块号，位数表示了有多少页（16-31；16位 2的16方个页面）</li><li>段内地址：表示这个段的大小，位数表示了每个段的大小（0-15；16位 2的16方&#x3D;64KB）每个段的大小是不一样的</li><li>真实内存地址是：段号 &#x3D;》 (基址：段内开始的地址)40K + 30K(段长：表示这个段的大小（段长&lt;段内地址）)<br><img src="/./images/4-2.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="4-段页式存储"><a href="#4-段页式存储" class="headerlink" title="4.  段页式存储"></a>4.  段页式存储</h3><p><img src="/./images/4-3.png" alt="软件设计师教程知识点整理"></p><h2 id="四-设备管理"><a href="#四-设备管理" class="headerlink" title="四.  设备管理"></a>四.  设备管理</h2><h3 id="1-设备分类"><a href="#1-设备分类" class="headerlink" title="1. 设备分类"></a>1. 设备分类</h3><ul><li>数据组织分类：块设备、字符设备</li><li>资源分配角度分类：独占设备、共享设备、虚拟设备</li><li>数据传输速率分类：低速设备、中速设备、高速设备</li></ul><h3 id="2-I-O-软件层次结构"><a href="#2-I-O-软件层次结构" class="headerlink" title="2. I&#x2F;O 软件层次结构"></a>2. I&#x2F;O 软件层次结构</h3><p><img src="/./images/4-6.png" alt="软件设计师教程知识点整理"></p><h3 id="3-输入输出技术"><a href="#3-输入输出技术" class="headerlink" title="3. 输入输出技术"></a>3. 输入输出技术</h3><ul><li>程序控制方式（查询）：CPU主动查询外设是否完成数据传输，效率极低</li><li>程序终端方式：外设完成数据传输后，向CPU发送终端，等待CPU传输数据，效率先对较高，适用于键盘等实时性较高的场景</li><li>DMA方式（直接主存存取）：CPU只完成必要的初始化等操作吗，数据传输整个过程都有DMA控制器来完成，在主存与外设之间建立直接的数据通路，效率高。适用于硬盘等高速设备。</li></ul><h3 id="4-虚设备和Spooling技术"><a href="#4-虚设备和Spooling技术" class="headerlink" title="4. 虚设备和Spooling技术"></a>4. 虚设备和Spooling技术</h3><p><img src="/./images/4-7.png" alt="软件设计师教程知识点整理"></p><h2 id="五-文件管理"><a href="#五-文件管理" class="headerlink" title="五.  文件管理"></a>五.  文件管理</h2><h3 id="1-文件索引"><a href="#1-文件索引" class="headerlink" title="1.  文件索引"></a>1.  文件索引</h3><ul><li>每个物理块大小为 1kb，每个物理块地址为 4B</li><li>直接索引：存放物理块数据 1kb</li><li>一级间接索引：存放物理块地址，每个物理块可以存放 1kb &#x2F; 4B &#x3D; 1024 &#x2F; 4 &#x3D; 256 个物理块地址，每个物理块 1kb， 就是一共 256 * 1 kb</li><li>二级间接索引：存放一级索引地址，每个物理块可以存储 256 个一级地址索引，每个一级地址可以存储256个物理块地址，就是 256 * 256 个物理块，每个物理块 1kb，大小是 256 * 256 * 1 kb<br><img src="/./images/4-4.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-文件目录树形结构"><a href="#2-文件目录树形结构" class="headerlink" title="2.  文件目录树形结构"></a>2.  文件目录树形结构</h3><p><img src="/./images/4-5.png" alt="软件设计师教程知识点整理"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第5章 软件工程基础知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC5%E7%AB%A0%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC5%E7%AB%A0%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第5章软件工程基础知识"><a href="#第5章软件工程基础知识" class="headerlink" title="第5章软件工程基础知识"></a>第5章软件工程基础知识</h1><h2 id="一-概述"><a href="#一-概述" class="headerlink" title="一.  概述"></a>一.  概述</h2><h4 id="1-软件工程基本原理"><a href="#1-软件工程基本原理" class="headerlink" title="1.软件工程基本原理:"></a>1.软件工程基本原理:</h4><p>用分阶段的生命周期计划严格管理&#x2F;坚持进行阶段评审&#x2F;实现严格的产品控制&#x2F;采用现代程序设计技术&#x2F;结果应能清楚的审查&#x2F;开发小组的人员应少而精&#x2F;承认不断改进软件工程实践的必要性.</p><h4 id="2-软件工程的基本要素"><a href="#2-软件工程的基本要素" class="headerlink" title="2.软件工程的基本要素"></a>2.软件工程的基本要素</h4><p>方法 工具 过程</p><h4 id="3-软件生存周期"><a href="#3-软件生存周期" class="headerlink" title="3.软件生存周期"></a>3.软件生存周期</h4><p>可行性分析与项目开发计划&#x2F;需求分析&#x2F;概要设计(选择系统解决方案,规划子系统)&#x2F;详细设计(设计子系统内部具体实现)&#x2F;编码&#x2F;测试&#x2F;维护</p><h4 id="4-软件过程"><a href="#4-软件过程" class="headerlink" title="4.软件过程"></a>4.软件过程</h4><ul><li><p>4.1能力成熟度CMM模型<br>对软件组织化阶段的描述，随着软件组织定义、实施、测量、控制和改进软件过程，软件组织的能力经过这些节点逐步提高。</p><ul><li>初始级 Initial：杂乱无章、混乱、无明确定义步骤，依靠个人努力和英雄式人物的作用</li><li>可重复级 Repeatable：建立例基本的项目管理过程和实践来跟踪项目费用、速度和功能特性。有必要的过程准则来重复以前在同类项目的成功</li><li>已定义级 Defined：过程已经文档化、标准化，依靠标准软件过程来开发和维护软件</li><li>已管理级 Managed：制定了软件过程和产品质量的详细度量标准，并且被开发组织的成员所熟悉</li><li>优化级 Optimized：加强了定量分析，产品反馈、新观念、新技术等是过程能够不断持续改进<br><img src="/./images/d5-1.png" alt="软件设计师教程知识点整理"></li></ul></li><li><p>4.2能力成熟度CMMI模型</p><ul><li>4.2.1 阶段型模型，关注组织的成熟度，五个成熟度模型如下<ul><li>初始的：过程不可预测且缺乏控制</li><li>已管理的：过程为项目服务</li><li>已定义的：过程为组织服务</li><li>定量管理的：过程已度量和控制</li><li>优化的： 集中于过程改进</li></ul></li><li>4.2.2 连续型模型，关注每个过程域的能力，一个组织对不同的过程域可以达到不同的过程域能力等级<ul><li>CL0-未完成的：过程域未执行或未得到CL1中定义的所有目标</li><li>CL1-未执行的：过程将可表示的输入工作产品转换成可标识的输出工作产品，以实现支持过程域的特定目标</li><li>CL2-已管理的：以管理的过程的制度化</li><li>CL3-已定义的：已定义的过程的制度化</li><li>CL4-定量管理的：可定量管理的过程的制度化</li><li>CL5-优化的：使用量化手段改变和优化过程域，以满足客户要求的改变和持续改进计划中的过程域</li></ul></li></ul></li></ul><h2 id="二-软件过程模型"><a href="#二-软件过程模型" class="headerlink" title="二.  软件过程模型"></a>二.  软件过程模型</h2><blockquote><p>即软件开发模型,是软件开发全部过程、活动和任务的结构框架</p></blockquote><h4 id="1-瀑布模型-Waterfall-Model"><a href="#1-瀑布模型-Waterfall-Model" class="headerlink" title="1. 瀑布模型 Waterfall Model"></a>1. 瀑布模型 Waterfall Model</h4><ul><li>1.1 瀑布模型SDLC<ul><li>结构化方法中的模型，是结构化的开发。</li><li>开发流程如同瀑布一般，一步一步的走下去，知道最后完成项目开发</li><li><strong>适用于需求明确或者二次开发（需求稳定），当需求不明确时，最终开发的项目会错误，有很大的缺陷。</strong><br>  <img src="/./images/d5-2.png" alt="软件设计师教程知识点整理"></li></ul></li><li>1.2 瀑布模型V模型<ul><li>时瀑布模型的一个变体</li><li>特点是增加了很多轮测试，并且这些测试贯穿于开发的各个阶段，不想其他模型都是软件开发完再测试。</li><li>很大程度上确保了项目的准确性<br>  <img src="/./images/d5-3.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h4 id="2-增量模型-Incremental-Model"><a href="#2-增量模型-Incremental-Model" class="headerlink" title="2. 增量模型 Incremental Model"></a>2. 增量模型 Incremental Model</h4><ul><li>增量模型：适用于需求不明确的项目，首先开发核心模块功能，然后与用户确认，之后再开发次核心模块的功能。即每一次开发一部分功能，并与用户需求确认，最终完成项目开发，优先级最高的服务最先交付。</li><li>特点：不是从系统整体的角度划分整个模块，因此不利于模块划分。<strong>难点在于如何将客户需求划分为多个增量</strong>。与原型不同的是：增量模型的<strong>每一次增量版本都是可独立操作的作品</strong>，而<strong>原型的构造一般是为了演示</strong>。<br><img src="/./images/d5-4.png" alt="软件设计师教程知识点整理"></li></ul><h4 id="3-演化模型"><a href="#3-演化模型" class="headerlink" title="3. 演化模型"></a>3. 演化模型</h4><ul><li><p>3.1 原型 Prototype Model</p><ul><li>即快速原型开发，与瀑布模型相反，原型针对的就是<strong>需求不明确的情况</strong></li><li>首选快速构造一个功能模型，演示给用户看，病案用户要求进行更改，中间再通过不断的演示和用户沟通，最终设计出项目，就不会出现于客户需求不符合的情况，采用的是<code>迭代的思想</code>。<br>  <img src="/./images/d5-5.png" alt="软件设计师教程知识点整理"></li></ul></li><li><p>3.2 螺旋模型 Spiral Model</p><ul><li>是多种模型的混合，<strong>针对需求不明确的项目</strong>，与原型类似，但是<strong>增加了风险分析</strong></li><li>四步：制定计划-&gt;风险分析-&gt;实施工程-&gt;用户评估<br>  <img src="/./images/d5-6.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h4 id="4-喷泉模型"><a href="#4-喷泉模型" class="headerlink" title="4. 喷泉模型"></a>4. 喷泉模型</h4><ul><li>是一种以用户需求为动力，以对象作为驱动的模型，适合于<strong>面向对象的开发方法</strong>。是开发过程具有迭代性和无间隙性。</li></ul><h4 id="5-基于构件的开发模型-Componment-based-Development-Model"><a href="#5-基于构件的开发模型-Componment-based-Development-Model" class="headerlink" title="5. 基于构件的开发模型 Componment-based Development Model"></a>5. 基于构件的开发模型 Componment-based Development Model</h4><ul><li>利用预先包装的<strong>构件</strong>来构造应用系统。构件可以是组织内部开发的构件，也可以是商品化成产品软件的构件</li><li>特点是<strong>增强了复用性</strong>，在系统开发的过程中会<strong>构建一个构件库</strong>，供其他系统复用，因此可以提高可靠性，节省时间和成本</li></ul><h4 id="6-形式化开发模型"><a href="#6-形式化开发模型" class="headerlink" title="6. 形式化开发模型"></a>6. 形式化开发模型</h4><ul><li>建立在<strong>严格数学基础上的</strong>一种软件开发方法，主要活动是生成计算机软件形式化的数学规格说明</li></ul><h4 id="7-统一过程模型UP"><a href="#7-统一过程模型UP" class="headerlink" title="7. 统一过程模型UP"></a>7. 统一过程模型UP</h4><ul><li>初始阶段： 需求和风险评估</li><li>精华阶段： 需求分析和架构设计</li><li>构建阶段： 实现过程</li><li>移交阶段： 测试,增量,交付</li></ul><h4 id="8-敏捷开发"><a href="#8-敏捷开发" class="headerlink" title="8. 敏捷开发"></a>8. 敏捷开发</h4><blockquote><p>针对小型项目，<br>主要是为了给程序员减负，<br>去掉了一些不必要的会议和文档。<br>开发宣言：个体和沟通胜过过程和工具，可以工作的软件胜过面面俱到的文档，客户胜过合同谈判，响应变化胜过遵循计划。<br><img src="/./images/d5-7.png" alt="软件设计师教程知识点整理"></p></blockquote><ul><li>8.1 结对编程：一个程序员开发，另一个审查代码，共同负责</li><li>8.2 自适应开发：强调开发的适应性。</li><li>8.3 水晶方法：针对每一个项目需要一套不同的策略、约定和方法论</li><li>8.4 极限编程XP：强调简化、沟通、反馈、勇气。计划赶不上变化，无需做出很多文档，测试优先</li><li>8.5 并列争球法：一种迭代的增量化过程，每隔一段时间30天一次的迭代称为一个冲刺，按需求优先级，多个组织和小组并行递增实现产品</li><li>8.6 敏捷统一过程AUP:大型上连续，小型上迭代构建软件系统。</li></ul><h2 id="三-软件需求分析"><a href="#三-软件需求分析" class="headerlink" title="三 软件需求分析"></a>三 软件需求分析</h2><h4 id="1-需求分类"><a href="#1-需求分类" class="headerlink" title="1. 需求分类"></a>1. 需求分类</h4><ul><li><p>1.1 按需求内容分类<br>业务需求：有客户提出的宏观的一个功能需求<br>用户需求：设计员去调查需求中设计到的每个用户的具体需求。<br>系统需求：经过整合，形成最终的系统需求，包括功能、性能、设计约束三个方面的需求。</p></li><li><p>1.2 从客户角度分类<br>基本需求：需求明确规定的功能<br>期望需求：除了基本需求外，客户认为利索应当包含在内的其它功能。<br>兴奋需求：未要求的需求和其它功能，会兰妃项目开发时间和成本</p></li><li><p>1.3 软件需求分类<br>功能需求：软件必须完成的基本需求<br>性能需求：软件和人与软件交互的静态或动态数值需求，如西戎响应速度、处理速度等。<br>设计约束：受其他标准硬件限制等方面的影响<br>属性：可用性、安全性、可维护性、可转移性<br>外部结构需求：用户接口、硬件接口、软件接口、通信接口</p></li></ul><h4 id="2-需求工程"><a href="#2-需求工程" class="headerlink" title="2. 需求工程"></a>2. 需求工程</h4><ul><li>2.1 需求获取：收集资料、讨论会JRP、用户访谈、书面调查、现场观摩、参加业务实践、阅读历史文档、抽样调查</li><li>2.2 需求分析与协商：分析不同人提出的所有需求之间的关系并判断</li><li>2.3 需求规约：即需求定义，目的是为了编写需求文档，在双方间达成一个共识</li><li>2.4 需求验证：需求开发节点的复查手段，需求验证通过后，要请用户签字确认，作为验收标准之一，此时，这个需求规格说明书就是需求基线</li><li>2.5 需求管理：对需求工程设计的所有过程进行规划和控制</li></ul><h4 id="3-需求管理"><a href="#3-需求管理" class="headerlink" title="3. 需求管理"></a>3. 需求管理</h4><ul><li>3.1 定义需求基线：通过了评审的需求说明书就是需求基线，下次如果需要变更需求，就需要按照流程来一步步进行</li><li>3.2 处理需求变更：主要关系需求变更过程中的需求风险管理，带有风险的做法有：无足够用户参与、忽略了用户分类、用户需求的不断增减、模棱两可的需求、不必要的特性、过于精简的srs,不准确的估算。</li><li>3.3 需求跟踪：双向跟踪，两个层次，正向跟踪表示用户原始需求是否都实现了，反向跟踪表示软件实现的是否都是用户要求的，不多不少。<br><img src="/./images/d6-3.png" alt="软件设计师教程知识点整理"></li></ul><h2 id="四-软件系统设计"><a href="#四-软件系统设计" class="headerlink" title="四 软件系统设计"></a>四 软件系统设计</h2><ul><li><p>1 系统设计阶段</p><blockquote><p>系统分析阶段，我们弄清楚了“做什么”的问题，并把这些需求通过规格说明书描述了出来，这也是目标系统的逻辑模型。进入设计阶段，要把软件“做什么”的逻辑模型转换成“怎么做”的物理模型</p></blockquote></li><li><p>2 系统设计的主要目的</p><blockquote><p>为系统制定蓝图，在各种技术和实施方法中权衡利弊，精心设计，合理地使用各种资源，得出新系统的详细设计方案</p></blockquote></li><li><p>3 系统设计方法</p><ul><li>面向数据流的结构化设计方法</li><li>面向对象的分析方法</li></ul></li><li><p>4 系统设计步骤</p><blockquote><p>概要设计 和 详细设计</p></blockquote><ul><li>概要设计基本任务：设计软件系统总体结构、数据结构和数据库设计、编写概要设计文档、评审。</li><li>详细设计的基本任务：模块内详细算法设计、模块内数据结构设计、数据库的物理设计、其它设计（代码、输入&#x2F;输出格式、用户界面）、详细设计说明书、评审。</li></ul></li></ul><h2 id="五-软件系统测试"><a href="#五-软件系统测试" class="headerlink" title="五 软件系统测试"></a>五 软件系统测试</h2><h4 id="1-测试目的"><a href="#1-测试目的" class="headerlink" title="1. 测试目的"></a>1. 测试目的</h4><ul><li>系统测试时为了发现错误而执行程序的过程，成功的测试时发现了至今尚未发现的错误</li></ul><h4 id="2-测试原则"><a href="#2-测试原则" class="headerlink" title="2. 测试原则"></a>2. 测试原则</h4><ul><li>应尽早并不断的进行测试</li><li>测试工作应该避免有开发软件的人或小组承担</li><li>在设计测试方案时，不仅要确定输入数据，而且要根据系统功能确定预期的输出结果</li><li>即包含有效、合理的测试用例，也包含不合理、失效的用例</li><li>检验程序是否做了该做的事，且是否做了不该做的事</li><li>严格按照测试计划进行</li><li>妥善保存测试计划和测试用例</li><li>测试用例可以重复使用和追加测试</li></ul><h4 id="3-测试阶段"><a href="#3-测试阶段" class="headerlink" title="3. 测试阶段"></a>3. 测试阶段</h4><ul><li><p>单元测试<br>  对单个模块进行测试，有程序员自己测试模块内部的接口、信息、功能，测试依据是软件详细说明说。在单元测试中，驱动模块用来调用被测试模块，自顶向下的单元测试中不需要另外编写驱动模块。桩模块（底层）用来模拟被测试模块多调用的子模块</p></li><li><p>集成测试</p><ul><li>将模块组合起来进行测试，分为一词性组装（简单、节约时间、发现错误少、只适合小项目）</li><li>增量式组装（能够发现更多错误，耗时长，可分为：自顶向下、自底向上、混合式）</li></ul></li><li><p>确认测试</p><ul><li>对已完成的软件进行功能上的测试</li><li>内部确认测试：无用户情况</li><li>Alpha测试：用户在开发环境下进行测试</li><li>Beta测试：用户在实际使用时进行的测试</li><li>验收测试：用户根据SRS对项目进行验收</li></ul></li><li><p>系统测试</p><ul><li>对软件进行性能测试</li><li>负载测试：极限情况下，系统各项性能指标</li><li>强度测试：系统资源特别低的情况下</li><li>容量测试：并发测试，系统可以同时处理的最大用户数量。</li><li>其它还有可靠性等性能测试，系统测试采用的是黑盒测试方法</li></ul></li><li><p>回归测试<br>  软件修改错误或变更后，进行回归测试以验证之前正确的代码是否引入了错误</p></li></ul><h4 id="4-测试方法"><a href="#4-测试方法" class="headerlink" title="4. 测试方法"></a>4. 测试方法</h4><ul><li><p>4.1 动态测试方法：程序运行时测试</p><ul><li>黑盒测试法：功能性测试，不了解软件代码结构，根据功能设计用例，测试软件功能</li><li>白盒测试： 结构性测试，明确代码流程，根据代码逻辑设计用例，进行用例覆盖</li><li>灰盒测试： 既有白盒也有黑盒</li></ul></li><li><p>4.2 静态测试：程序静止时，对代码进行人工审查</p><ul><li>桌签审查：程序员自己检查编写的程序，在程序编译后，单元测试前</li><li>代码审查：若干个程序员和测试人员组成评审小组，通过召开评审会议来进行审查</li><li>代码走查：开会来进行审查，由测试人员提供测试用例，让程序员扮演计算机的角色，手动运行测试用例，检查代码逻辑</li></ul></li></ul><h4 id="5-测试策略"><a href="#5-测试策略" class="headerlink" title="5. 测试策略"></a>5. 测试策略</h4><ul><li>自顶向下：先测试整个系统，需要编写桩程序，而后逐步向下直至最后测试最底层模块。有点事较早的验证例系统的主要控制和判断点</li><li>自底向上：从底层开始模块测试，需要编写驱动程序，而后开始逐一合并模块，最终完成整个系统的测试。优点是较早的验证了底层模块。</li><li>三明治：既有自底向上也有自顶向下，兼有二者的优点，但是工作量大</li></ul><h4 id="6-测试用例设计"><a href="#6-测试用例设计" class="headerlink" title="6. 测试用例设计"></a>6. 测试用例设计</h4><ul><li><p>6.1 黑盒测试<br>  黑盒测试用例：将程序看做一个黑盒子，只知道输入输出，不知道内部代码，由此设计出测试用例，分为下面几类：</p><ul><li>等价类划分：把所有的书按照某种特性进行归类，而后在没类的数据里选取一个即可。等价类测试用例的设计原则：1）设计一个新的测试用例，使其尽可能多的覆盖尚未被覆盖的有效等价类，重复这一步，知道所有的有效等价类都被覆盖为止。2）设计一个新的测试用例，使其仅覆盖一个尚未被覆盖的无效等价类，重复这一步，知道所有的无效等价类都被覆盖为止。</li><li>边界值划分：将每类的边界值作为测试用例，边界值一般为范围的两端值以及在此范围之外的与此范围间隔最小的两个值，如年龄范围为0-150，边界值是0,150 - 1,151四个</li><li>错误推测： 没有固定的方法，凭经验而言，来推测有可能产生问题的地方，作为测试用例进行测试</li><li>因果图： 由一个结果来反推原因的方法，具体结果具体分析，没有固定方法。</li></ul></li><li><p>6.2 白盒测试<br>  白盒测试用例：知道程序的逻辑代码，按照程序的代码语句来设计覆盖代码分支的测试用例，覆盖级别从第到高分为下面6种：</p><ul><li>语句覆盖：逻辑代码中的所有语句都要被执行一遍，覆盖级别最低，因为执行了所有的语句，不代表执行了所有的条件判断</li><li>判定覆盖：判断语句的条件的真假都要覆盖一次</li><li>条件覆盖：代码中的一个条件，可能是组合的，如 <code>a&gt;0 &amp;&amp; b&lt;0</code>判断覆盖只针对此组合条件的真假分支做两个测试用例，而条件覆盖是对每个独立的条件都要做真假分支的测试用例，共可有4个测试用例。层级更高，注意区别，条件覆盖，针对每个条件都要真假覆盖，判定覆盖，只针对一个条件判断语句。</li><li>判定&#x2F;条件 覆盖：是判定中每个条件的所有可能取值（真&#x2F;假）至少出现一次，并且每个判定本身的判定结果（真、假）也至少出现一次，即两种覆盖的综合</li><li>条件组合覆盖：每个判定条件中条件的各种可能值得组合都至少出现一次</li><li>路劲覆盖：逻辑代码中所有可行路径都覆盖了，覆盖层级最高</li></ul></li></ul><h4 id="7-调试"><a href="#7-调试" class="headerlink" title="7. 调试"></a>7. 调试</h4><ul><li>测试时发现错误，调试是找出错误的代码和原因</li><li>调试需要确定错误的准确位置：确定问题的原因并设法改正；改正后要进行回归测试。</li><li>调试的方法有：蛮力法、回溯法（从出错的地方开始向回找）、原因排错法（找出所有可能的原因，逐一进行排除，具体包括演绎法、归纳法、二分法）</li></ul><h2 id="六-软件系统转换、维护、评价"><a href="#六-软件系统转换、维护、评价" class="headerlink" title="六 软件系统转换、维护、评价"></a>六 软件系统转换、维护、评价</h2><h4 id="1-系统转换"><a href="#1-系统转换" class="headerlink" title="1. 系统转换"></a>1. 系统转换</h4><p>系统转换是指：新系统开发完毕，投入运行，取代现有系统的过程，需要考虑多方面的问题，以实现与老系统的交接，有以下三种转换计划</p><ul><li>直接转换：信息同直接替换旧系统，风险大，适合于不复杂的新系统或旧系统无法使用。有点事节省成本</li><li>并行转换：新系统和旧系统并行工作一段时间，新系统经过测试运行后再取代，风险小。缺点是耗费人力和时间，难以控制两个系统并存间的数据转换</li><li>分段转换：分期分批逐步转换，是直接和并行转换的集合。将大型系统分为多个子系统，一次试运行每个子系统。适用于大型项目，耗时长，旧的系统需要和新系统混合使用，需要协调好接口等问题。</li></ul><h4 id="2-系统维护"><a href="#2-系统维护" class="headerlink" title="2. 系统维护"></a>2. 系统维护</h4><ul><li><p>软件维护是软件生命周期的租后一个阶段，不属于系统开发过程。是在软件已经交付使用之后为了改正错误或满足新的需求而修改软件的过程，即软件在交付后对软件所做的一切改动</p></li><li><p>系统可维护性可以定义为维护人员理解、改正、改动和改进这个软件的难以程度，期评价指标如下：</p><ul><li>易测试性：指为确认经修改软件所需努力有关的软件属性</li><li>易分析性：指为诊断缺陷或失效原因，或为判定待修改的部分所需努力有关的软件属性</li><li>易改变性：指与进行修改、排错或适应环境变换所需努力有关的软件属性</li><li>稳定性：指与修改造成未预料效果的风险有关的软件属性</li></ul></li><li><p>系统维护包括硬件维护、软件维护、数据维护，其中软件维护如下：</p><ul><li>正确性维护：发现了bug而进行的修改</li><li>适应性维护：由于外部环境发生了改变，被动进行的对软件的修改和升级</li><li>完善性维护：基于用户主动对软件提出更多需求，修改软件，正价更多的功能，性能更好，更完善</li><li>预防性维护：对未来可能发生的bug进行预防性的修改</li></ul></li></ul><h4 id="3-系统评价"><a href="#3-系统评价" class="headerlink" title="3. 系统评价"></a>3. 系统评价</h4><ul><li><p>立项评价：系统开发前的预评价，分析是否立项开发，做可行性评价</p></li><li><p>中期评价：项目开发过程中期每个阶段的阶段评审。或者项目在开发中途遇到重大变故，评价是否还要继续</p></li><li><p>结项评价：系统投入正式运行后，了解系统是否达到预期的目的和要求而对西宫进行的综合评价</p></li><li><p>评价指标</p><ul><li>1）从信息系统的组成部分出发：可以按照运行效果和用户需求，系统质量和技术条件这两条线索构造指标</li><li>2）从信息系统的评价对象出发：对开发者来说关心的是系统质量和技术水平；对用户而言，关心的是用户需求和裕兴质量；系统外部环境则主要通过社会效益指标来反映</li><li>3）从经济学角度出发，分别按系统成本，系统效益和财务指标3条线建立指标</li></ul></li></ul><h2 id="七-软件项目管理"><a href="#七-软件项目管理" class="headerlink" title="七.  软件项目管理"></a>七.  软件项目管理</h2><h4 id="1-软件项目估算"><a href="#1-软件项目估算" class="headerlink" title="1. 软件项目估算"></a>1. 软件项目估算</h4><ul><li><p>1.1 项目估算方法</p><ul><li>成本估算方法</li><li>自顶向下估算方法：又称类比估算方法，确定一个总金额，再向下分摊到每一个功能点</li><li>自底向上复算：从底层功能点估算成本，向上累计</li><li>差别估算：与以前项目比较，找出不同点重新估算，相同点直接估算</li><li>专家估算：聘请专家一起经验对项目整体费用估算</li></ul></li><li><p>1.2 项目估算模型</p><ul><li><p>1.2.1 COCOMO 模型<br>常见的软件规模估算方法。代码分析作为其中一种度量估计单位，已代码函数福算出每隔程序员工作量，累加得软件成本。</p><ul><li>基本COCOMO模型：用一个已估算出来的代码行树为自变量的经验函数计算软件开发工作量。</li><li>中间COCOMO模型：在基本模型的基础上再用设计产品硬件、人员、项目等方面的影响因素调整工作量的估算。</li><li>详细COCOMO模型：在中间模型的基础上再进一步考虑软件工程中分析、设计、过程等每一步的影响</li></ul></li><li><p>1.2.2 COCOMO II 模型<br>  COCOMO 模型的升级。考虑多个成本驱动因子。该方法包括三个阶段型模型。即应用组装模型（软件工程前期阶段使用），早期设计模型（需求已确定并且未建立软件体系结构时使用），体系结构模型（软件构造过程中使用）</p></li><li><p>1.2.3 Putnam 估算模型<br>  一种动态多变量模型，假设在软件开发的整个生存周期中工作量有特定的分布。</p></li></ul></li></ul><h4 id="2-软件项目进度管理"><a href="#2-软件项目进度管理" class="headerlink" title="2. 软件项目进度管理"></a>2. 软件项目进度管理</h4><blockquote><p>基本原则：划分、相互依赖、时间分配、工作量确认、确认职责、明确输出结果、确定里程碑</p></blockquote><ul><li>2.1 Grantt 图<ul><li>甘特图，又称为横道图。横轴表示时间，纵轴表示活动，以时间顺序表示活动。</li><li>能够反映活动间的并行关系，单无法反映活动之间的依赖关系。因此也能以清晰的确认关键任务和关键路径。<br>  <img src="/./images/d5-9.png" alt="软件设计师教程知识点整理"></li></ul></li><li>2.2 Pert 图<ul><li>类似于前趋图，是又想吐。反映活动之间的依赖关系，有向边上标注活动的运行时间，但无法反映活动之间的并行关系。</li><li>图中的节点：称为事件。<code>-&gt; 节点</code>表示上一个节点的任务结束，<code>节点-&gt;</code>表示改节点开始任务，箭头上的事件表示从该节点开始到结束需要的时间。流入该节点所有任务都结束，该节点才开始运行。</li><li>特点：不仅给出了每隔任务的开始时间、结束时间和完成所需要的时间，还给出了任务时间的关系。</li><li>关键路径：项目总耗时醉成的一条线路<br>  <img src="/./images/d5-10.png" alt="软件设计师教程知识点整理"><br>  <img src="/./images/d5-11.png" alt="软件设计师教程知识点整理"></li></ul></li></ul><h4 id="3-软件项目的组织"><a href="#3-软件项目的组织" class="headerlink" title="3. 软件项目的组织"></a>3. 软件项目的组织</h4><ul><li><p>组织结构模式：项目型（项目经理绝对领导）、职能型（部门领导为主）、矩阵型（二者都有，但是权力分割不同）</p></li><li><p>程序设计小组的组织方式：</p><ul><li>主程序员小组：主程序员全权负责，后援工程师必要时能替代主程序员，适合大规模项目</li><li>民主制小组：即无主程序员，决策全是成员参与投票，适合于项目规模小，开发人员少，采用新技术和确定性小的项目</li><li>层次式小组：两个层次，一名组长领导若干个高级程序员；每个高级程序要领导若干个程序员。</li></ul></li></ul><h4 id="4-软件配置管理"><a href="#4-软件配置管理" class="headerlink" title="4. 软件配置管理"></a>4. 软件配置管理</h4><ul><li><p>4.1 基线：软件过程中生存期各开发阶段末尾的特定点。又称为里程碑，反映阶段性成果。</p></li><li><p>4.2 软件配置项<br><img src="/./images/d5-17.png" alt="软件设计师教程知识点整理"></p></li><li><p>4.3 版本控制<br><img src="/./images/d5-18.png" alt="软件设计师教程知识点整理"></p></li></ul><h4 id="5-软件风险管理"><a href="#5-软件风险管理" class="headerlink" title="5. 软件风险管理"></a>5. 软件风险管理</h4><ul><li><p>5.1 软件风险特性</p><ul><li>不确定性：可能发生也可能不发生</li><li>损失：发生会产生恶性后果</li></ul></li><li><p>5.2 软件风险</p><ul><li><p>5.2.1。 项目风险</p><blockquote><p>项目风险威胁到项目计划。如果发生，有可能推迟项目的进度和增加项目的成本</p></blockquote><ul><li>风险因素：项目预算、进度、人员、资源、利益相关者、需求等方面的潜在问题以及他们对软件项目的影响。</li><li>项目复杂度、规模及结构不确定性也属于风险因素</li></ul></li><li><p>5.2.2 技术风险</p><blockquote><p>技术风险威胁到开发软件质量的交付时间。如果发生，开发工作会变的很困难或不可能</p></blockquote><ul><li>风险因素：设计、实现、接口、验证、维护等方面的潜在问题</li><li>此外：规格说明的歧义性、技术的不确定性、技术陈旧以及 前沿技术的风险 等因素</li></ul></li><li><p>5.2.3 商业风险</p><blockquote><p>威胁到开发软件的生存能力</p></blockquote><ul><li>市场风险：开发了无人需要的优良系统</li><li>策略风险：不在符合公司商业策略</li><li>销售风险：销售部门不知道如何销售</li><li>管理风险：重点转移或人员变动等带来的缺少高级管理层的支持</li><li>预算风险：没有得到预算等</li></ul></li></ul></li><li><p>5.3 风险管理过程</p><ul><li>风险识别：识别项目中的已知和可预测的风险，确定来源、产生条件、描述风险的特征。形成一个风险列表</li><li>风险预测：预测风险发生的概率和风险发生的后果</li><li>风险评估：定义风险参照水准，将识别出风险评估分类</li><li>风险控制：辅助项目组建立处理风险的策略，包括风险避免，风险监控、RMMM计划（风险环节、监控和管理计划）</li></ul></li></ul><h2 id="八-软件质量"><a href="#八-软件质量" class="headerlink" title="八. 软件质量"></a>八. 软件质量</h2><h4 id="1-质量模型"><a href="#1-质量模型" class="headerlink" title="1. 质量模型"></a>1. 质量模型</h4><ul><li><p>ISO&#x2F;IEC9126 质量模型<br><img src="/./images/d5-12.png" alt="软件设计师教程知识点整理"><br><img src="/./images/d5-13.png" alt="软件设计师教程知识点整理"><br><img src="/./images/d5-14.png" alt="软件设计师教程知识点整理"><br><img src="/./images/d5-15.png" alt="软件设计师教程知识点整理"></p></li><li><p>McCall II 质量模型<br><img src="/./images/d5-16.png" alt="软件设计师教程知识点整理"></p></li></ul><h4 id="2-软件质量保证"><a href="#2-软件质量保证" class="headerlink" title="2. 软件质量保证"></a>2. 软件质量保证</h4><ul><li>3个要点：<ul><li>软件必须满足用户需求，与用户需求不一致的软件无质量可言。</li><li>软件影尊徐规定的一些列开发标准，不遵循这些这则的软件质量无法保证</li><li>软件还应满足某些隐含的需求：可理解性，可维护性等</li></ul></li><li>7个任务：<ul><li>应用技术方法</li><li>正式的技术评审</li><li>测试软件</li><li>标准的实施</li><li>控制变更</li><li>度量</li><li>记录保存和报告</li></ul></li></ul><h4 id="3-软件质量评审"><a href="#3-软件质量评审" class="headerlink" title="3. 软件质量评审"></a>3. 软件质量评审</h4><ul><li>设计的规格说明书符合用户标准，称为设计质量</li><li>程序按照设计规格说明书所规定的情况正确执行，称为程序质量</li></ul><h4 id="4-容错技术"><a href="#4-容错技术" class="headerlink" title="4. 容错技术"></a>4. 容错技术</h4><blockquote><p>容错就是软件遇到错误的处理能力。主要手段是冗余</p></blockquote><ul><li>结构冗余：静态（表决，比较，少数服从多数），动态（多重模块待机备份，故障时切换备份机），混合（两者结合）</li><li>信息冗余：为检错和纠错再数据中加上一段额外的信息，如校验码原理</li><li>时间冗余：遇到错误是重复执行，例如回滚，重复执行还有错则转入错误处理逻辑</li><li>冗余附加技术：为实现：结构、信息、时间的冗余技术所需的资源和技术。包括程序、指令、数据、存放和调动他们的空间和通道等。<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在屏蔽硬件错误的容错技术中，冗余附加技术包括：关键程序和数据的冗余及调用；检测、表决、切换、重构和复算的实现。</span><br><span class="line">在屏蔽软件错误的容错技术中，冗余附加技术包括：冗余备份程序的存储及调用；实现错误检测和错误恢复的程序；实现容错软件所需的固化程序。</span><br></pre></td></tr></table></figure></li></ul><h2 id="九-软件度量"><a href="#九-软件度量" class="headerlink" title="九. 软件度量"></a>九. 软件度量</h2><ul><li>软件的两种属性：外部属性指面向管理的属性，可直接测量，一般为性能指标。内部属性指软件产品本身的属性，如可靠性等，只能间接测量</li><li>McCabe 度量法：又称为环路复杂度，假设有向图中有向边为m，节点数为n，则此有向图的环路复杂度为<strong>m-n+2</strong><br><img src="/./images/d5-19.png" alt="软件设计师教程知识点整理"><blockquote><p>m、n 代表的含义不能混淆。对于程序流程图：每一个条分支边就是一条有向边，每一个语句就是一个顶点</p></blockquote></li></ul><h2 id="十-软件工具与软件开发环境"><a href="#十-软件工具与软件开发环境" class="headerlink" title="十.  软件工具与软件开发环境"></a>十.  软件工具与软件开发环境</h2><h4 id="1-开发工具"><a href="#1-开发工具" class="headerlink" title="1. 开发工具"></a>1. 开发工具</h4><ul><li><p>1.1 软件开发工具：软件开发过程的各种活动使用的工具</p><ul><li>需求分析工具</li><li>设计工具</li><li>编码和排错工具</li><li>测试工具</li></ul></li><li><p>1.2 软件维护工具：维护过程中的活动的软件，对软件代码何其文档进行各种维护活动</p><ul><li>版本控制工具</li><li>文档分析工具</li><li>开发信息库工具</li><li>逆向工程工具</li><li>再工程工具</li></ul></li><li><p>1.3 管理和软件支持工具：管理活动和支持活动，确保软件高质量的完成</p><ul><li>项目管理工具</li><li>配置管理工具</li><li>软件评测工具</li></ul></li></ul><h4 id="2-开发环境"><a href="#2-开发环境" class="headerlink" title="2. 开发环境"></a>2. 开发环境</h4><ul><li>由工具集合环境集构成。工具集用于软甲开发的过程、活动、任务。环境集用于提供环境统一的支持。<br><img src="/./images/d5-8.png" alt="软件设计师教程知识点整理"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第6章 结构化开发方法</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC6%E7%AB%A0%E7%BB%93%E6%9E%84%E5%8C%96%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC6%E7%AB%A0%E7%BB%93%E6%9E%84%E5%8C%96%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="第6章-结构化开发方法"><a href="#第6章-结构化开发方法" class="headerlink" title="第6章 结构化开发方法"></a>第6章 结构化开发方法</h1><h2 id="一-系统分析"><a href="#一-系统分析" class="headerlink" title="一 系统分析"></a>一 系统分析</h2><ul><li><p>系统分析是一种问题求解技术，它将一个系统分解成各个组成部分，目的是研究各个部分如何工作、交互，以实现其系统目标。</p></li><li><p>目的和任务：系统分析的主要任务是对线性系统更进一步详细调查，将调查中所得到的文档资料集中，对组织内部整体管理状况和信息处理过程进行分析，为系统开发提供所需的资料，并提交系统方案说明书。</p></li><li><p>系统分析的主要步骤</p><ul><li>1） 认识、理解当前的现实环境，获得当前系统的”物理模型”</li><li>2） 从当前系统的”物理模型”抽象出当前系统的”逻辑模型”</li><li><ol start="3"><li>对当前系统的”逻辑模型”进行分析和优化，建立目标系统的”逻辑模型”</li></ol></li><li><ol start="4"><li>对目标系统的逻辑模型具体化，建立目标系统的物理模型。</li></ol></li></ul></li><li><p>系统开发的目的是将现有系统的物理模型转换为目标系统的物理模型。</p></li></ul><h4 id="1-系统结构设计基本原理"><a href="#1-系统结构设计基本原理" class="headerlink" title="1. 系统结构设计基本原理"></a>1. 系统结构设计基本原理</h4><ul><li>抽象（重点说明一个实体的本质方面，忽略非本质方面）</li><li>模块化 （可组合、分解和更换的单元）</li><li>信息隐蔽 （将每个程序的成分隐藏或封装在一个单一的设计模块中）</li><li>模块独立 （每个模块完成一个相对独立的特定子功能，且与其他模块之间的联系简单）</li></ul><h4 id="2-模块之间的联系-耦合-和-内聚"><a href="#2-模块之间的联系-耦合-和-内聚" class="headerlink" title="2. 模块之间的联系 耦合 和 内聚"></a>2. 模块之间的联系 <strong>耦合</strong> 和 <strong>内聚</strong></h4><ul><li><p>2.1 <strong>耦合</strong>：是模块之间的相对独立性的度量<br><img src="/./images/d6-2.png" alt="软件设计师教程知识点整理"></p></li><li><p>2.2 <strong>内聚</strong>：是一个模块内部各个元素彼此结合的紧密程度的度量<br><img src="/./images/d6-1.png" alt="软件设计师教程知识点整理"></p></li></ul><h3 id="3-系统结构化方法设计过程"><a href="#3-系统结构化方法设计过程" class="headerlink" title="3. 系统结构化方法设计过程"></a>3. 系统结构化方法设计过程</h3><ul><li><p>3.1 系统结构设计原则</p><ul><li>分解–协助原则</li><li>自顶向下原则</li><li>信息隐蔽和抽象原则</li><li>一致性原则明确性原则</li><li>模块间高内聚低耦合</li><li>模块的扇入系数和扇出系数合理</li><li>模块规模适当</li></ul></li><li><p>3.2 子系统划分的原则</p><ul><li>子系统要具有相对独立性</li><li>子系统之间数据的依赖性尽量小</li><li>子系统划分的结果应使数据冗余较小</li><li>子系统的设置应考虑今后管理发展的需要</li><li>子系统的划分应便于系统分阶段实现</li><li>子系统的划分应考虑到各类资源的充分利用</li></ul></li></ul><h2 id="二-结构化分析方法"><a href="#二-结构化分析方法" class="headerlink" title="二 结构化分析方法"></a>二 结构化分析方法</h2><h4 id="1-结构化分析方法"><a href="#1-结构化分析方法" class="headerlink" title="1. 结构化分析方法"></a>1. 结构化分析方法</h4><ul><li>结构化的分析方法SA：自顶向下，逐步分解，是面向数据的，强调分析对象的数据流；</li><li>需要建立：<ul><li>功能模型（DFD数据流图）</li><li>行为模型（状态转换图）</li><li>数据模型（E-R图）</li><li>数据字典（数据元素，数据结构，数据流，数据存储，加工逻辑，外部实体）</li></ul></li></ul><h4 id="2-DFD数据流图"><a href="#2-DFD数据流图" class="headerlink" title="2. DFD数据流图"></a>2. DFD数据流图</h4><ul><li><p>2.1 数据流图描述数据在系统中如何被传送或变换，以及如何对数据流进行变换的功能或子功能，用于对功能建模，数据流图相关概念如下图：<br><img src="/./images/d4-11.png" alt="软件设计师教程知识点整理"></p></li><li><p>2.2 数据流图是可以分层的，从顶层（即上下文无关数据流）到0层、1层等，顶层数据流图只含有一个加工处理表示整个管理信息系统，描述了系统的输入输出，以及和外部实体的数据交互。如下：<br><img src="/./images/d4-12.png" alt="软件设计师教程知识点整理"></p></li><li><p>2.3 数据流图的基本设计原则</p><ul><li>1） 数据守恒原则：对任何一个加工来说，其所有输出数据流中的数据必须能从该加工的数据数据流中直接获得，或者说是通过该加工能产生的数据</li><li>2） 守恒加工原则：对同一个加工来说，输入和输出的名字必须不相同，即使他们的组成成分相同。</li><li>3） 对于每个加工，必须既有输入数据流，又有输出数据流</li><li>4） 外部实体与外部实体之间不存在数据流</li><li>5） 外部实体与数据存储之间不存在数据流</li><li>6） 数据存储于数据存储之间不存在数据流</li><li>7） 父图和子图的平衡原则：子图的输入输出数据流同父图相应加工的输入输出数据流必须一致，此即父图和子图的平衡。此平衡原则不存在与单张图。</li><li>8） 数据流与加工相关，且必须经过加工</li></ul></li></ul><h4 id="3-数据字典"><a href="#3-数据字典" class="headerlink" title="3. 数据字典"></a>3. 数据字典</h4><ul><li>数据字典是用来定义在数据流图中出现的符号或者名称的含义，在数据流图中，每个存储、加工、实体的含义都必须定义在数据字典中。并且父图和子图之间这些名称要相同。如下<br><img src="/./images/d4-13.png" alt="软件设计师教程知识点整理"></li></ul><h2 id="三-WEBAPP分析和设计"><a href="#三-WEBAPP分析和设计" class="headerlink" title="三 WEBAPP分析和设计"></a>三 WEBAPP分析和设计</h2><h4 id="1-WEBAPP特性"><a href="#1-WEBAPP特性" class="headerlink" title="1. WEBAPP特性"></a>1. WEBAPP特性</h4><ul><li>是基于web的系统和应用，大多数应用采用敏捷开发过程模型进行开发。</li><li>网络密集性（服务于不同客户全体的需求）、并发性（大量用户同时访问）、无法预知的负载量（用户数量）、性能（响应时间过长导致用户流失）、可用性、数据驱动（和用户的数据交互）</li></ul><h4 id="2-WEBAPP需求模型"><a href="#2-WEBAPP需求模型" class="headerlink" title="2. WEBAPP需求模型"></a>2. WEBAPP需求模型</h4><ul><li><p>2.1 内容模型<br>给出由WEBAPP提供的全部系列内容，包括了文字、图形、图像、视频和视频。</p></li><li><p>2.2 交互模型<br>描述了用户与WEBAPP采用了那种交互方式。由一种或多种元素构成，包括用例、顺序图、状态图、用户界面原型等。</p></li><li><p>2.3 功能模型<br>许多WEBAPP提供了大量的计算和操作功能，这些功能与内容直接相关（既能使用又能生成内容，如统计报表）。这些功能常常以用户的交互活动为主要目标。<br>功能模型定义了将用户WEBAPP内容并描述其它处理功能的操作，这些功能不依赖于内容却是最终用户所必需的。</p></li><li><p>2.4 导航模型<br>为WEBAPP定义所有导航策略，考虑了每一类用户如何从一个WEBAPP元素（如内容对象）导航到另一个元素</p></li><li><p>2.5 配置模型<br>描述WEBAPP所在环境和基础设施。在必需考虑配置体系结构的情况下，可以使用UML部署图。</p></li></ul><h4 id="3-WEBAPP设计"><a href="#3-WEBAPP设计" class="headerlink" title="3. WEBAPP设计"></a>3. WEBAPP设计</h4><ul><li><p>3.1 架构设计<br>使用多层架构来构造，包括用户界面或展示层、基于一组业务规则来知道与用户端浏览器进行信息交互的控制器，以及可以包含WEBAPP的业务规则的内容或模型层，描述将以什么方式来管理用户交互、操作内容处理任务、实现导航及展示内容。</p></li><li><p>3.2 构件设计<br>构件：定义良好的聚合功能，为最终用户处理内容或提供计算或处理数据<br>构件内容：关注内容对象，以及包装后展示给最终用户的方式，应该适合创建的WEBAPP特性<br>构件功能：将WEBAPP作为一些列构件加以交付，这些构件与信息提携结构并行开发，以确保一致性。</p></li><li><p>3.3 内容设计<br>着重于内容对象的表现和导航的组织，通常采用线性结构、网格机构、层次结构、网络结构四中结构及其组合。</p></li><li><p>3.4 导航设计<br>定义导航路径，使用户可以访问WEBAPP的内容和功能</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第7章 面向对象技术(UML建模+设计模式)</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC7%E7%AB%A0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%8A%80%E6%9C%AF(UML%E5%BB%BA%E6%A8%A1+%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F)/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC7%E7%AB%A0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%8A%80%E6%9C%AF(UML%E5%BB%BA%E6%A8%A1+%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F)/</url>
      
        <content type="html"><![CDATA[<h1 id="第7章面向对象技术-UML建模-设计模式"><a href="#第7章面向对象技术-UML建模-设计模式" class="headerlink" title="第7章面向对象技术(UML建模+设计模式)"></a>第7章面向对象技术(UML建模+设计模式)</h1><h2 id="1-面向对象"><a href="#1-面向对象" class="headerlink" title="1. 面向对象"></a>1. 面向对象</h2><h3 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h3><ul><li>对象：基本的裕兴实体，为类的实例</li><li>消息：对象间通信一种构造称为消息</li><li>类：对象的抽象</li><li>继承：父类与子类</li><li>多态：不通的对象收到同一个消息产生不同反应。参数多态，包含多态，过载多态，强制多态</li><li>覆盖：子类覆盖父类同名同参的方法</li><li>函数重载：函数同名不同参数</li><li>封装：</li><li>静态类型：编译时确定，静态绑定：程序执行前已经被绑定</li><li>动态类型：运行时确定，动态绑定：运行时实际引用的对象类型决定调用那个方法<br><img src="/./images/d8-6.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="1-2-分析设计"><a href="#1-2-分析设计" class="headerlink" title="1.2 分析设计"></a>1.2 分析设计</h3><p><img src="/./images/d8-6-2.png" alt="软件设计师教程知识点整理"></p><h2 id="2-UML-建模"><a href="#2-UML-建模" class="headerlink" title="2. UML 建模"></a>2. UML 建模</h2><h3 id="2-1-UML建模概念"><a href="#2-1-UML建模概念" class="headerlink" title="2.1 UML建模概念"></a>2.1 UML建模概念</h3><ul><li>UML是统一建模语言，与程序设计语言并无关系</li><li>UML构造块包括：<strong>事物，关系，图</strong></li></ul><h3 id="2-2-UML建模中的事物"><a href="#2-2-UML建模中的事物" class="headerlink" title="2.2 UML建模中的事物"></a>2.2 UML建模中的事物</h3><h5 id="2-2-1-结构事物"><a href="#2-2-1-结构事物" class="headerlink" title="2.2.1 结构事物"></a>2.2.1 结构事物</h5><ul><li>模型的静态部分名称<br><img src="/./images/d8-9.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-2-2-行为事物"><a href="#2-2-2-行为事物" class="headerlink" title="2.2.2 行为事物"></a>2.2.2 行为事物</h5><ul><li>模型的动态部分：交互，活动，状态机<br><img src="/./images/d8-8.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-2-3-分组事物-和-注释事物"><a href="#2-2-3-分组事物-和-注释事物" class="headerlink" title="2.2.3 分组事物 和 注释事物"></a>2.2.3 分组事物 和 注释事物</h5><ul><li>分组事物 模型的组织部分，例如：包</li><li>注释事物 模型的解释部分<br><img src="/./images/d8-7.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-3-UML建模中的关系"><a href="#2-3-UML建模中的关系" class="headerlink" title="2.3 UML建模中的关系"></a>2.3 UML建模中的关系</h3><ul><li>依赖：一个事物依赖于另一个事物的变化而变化</li><li>关联：结构关系，描述了一组链，分为组合和聚合（聚集）。是部分和整体的关系。组合关系更强。</li><li>泛化：一般&#x2F;特殊 父子关系</li><li>实现：一个类保证了另一个类执行的契约<br><img src="/./images/d8-10.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-4-UML建模中的图"><a href="#2-4-UML建模中的图" class="headerlink" title="2.4 UML建模中的图"></a>2.4 UML建模中的图</h3><h5 id="2-4-1-类图-Class-Diagram"><a href="#2-4-1-类图-Class-Diagram" class="headerlink" title="2.4.1 类图 Class Diagram"></a>2.4.1 类图 Class Diagram</h5><ul><li>静态图，系统的静态设计视图。展现一组对象、接口、协作和他们之间的关系。</li><li>UML类图包括：多重度、属性、操作、关系<br><img src="/./images/d8-11.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-2-对象图-Object-Diagram"><a href="#2-4-2-对象图-Object-Diagram" class="headerlink" title="2.4.2 对象图 Object Diagram"></a>2.4.2 对象图 Object Diagram</h5><ul><li>静态图。展现某一时刻一组对象及他们之间的关系，为类图的某一快照。</li><li>在没有类图的状态下，对象图就是静态设计视图<br><img src="/./images/d8-12.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-3-用例图-Use-Case-Diagram"><a href="#2-4-3-用例图-Use-Case-Diagram" class="headerlink" title="2.4.3 用例图 Use Case Diagram"></a>2.4.3 用例图 Use Case Diagram</h5><ul><li>静态图，展现了一组用例、参与者以及它们之间的关系</li><li>用例图中的参与者是人、硬件、系统可以扮演的角色。用例是参与者完成的一系列操作</li><li>用例之间的关系是：扩展、包含、泛化<br><img src="/./images/d8-13.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-4-序列图-Sequence-Diagram"><a href="#2-4-4-序列图-Sequence-Diagram" class="headerlink" title="2.4.4 序列图 Sequence Diagram"></a>2.4.4 序列图 Sequence Diagram</h5><ul><li>动态图，顺序图。是场景的图形化表示，描述了一时间顺序组织的对象间的交互活动</li><li>同步消息 左到右 实心箭头，表示阻塞调用，需要等待控制权返回后继续执行</li><li>异步消息 左到右 空心箭头，表示继续执行，不需要等待控制权返回可以继续执行下一个消息</li><li>返回消息 右到左 空心箭头<br><img src="/./images/d8-14.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-5-通信图-Communication-Diagram"><a href="#2-4-5-通信图-Communication-Diagram" class="headerlink" title="2.4.5 通信图 Communication Diagram"></a>2.4.5 通信图 Communication Diagram</h5><ul><li>动态图，即协作图。是顺序图的另一种表示方法。</li><li>对象和消息组成的图，不强调时间顺序，只强调事件之间的通信</li><li>而且也没有固定的画法规则，和顺序图统称为交互图。<br><img src="/./images/d8-15.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-6-状态图-State-Diagram"><a href="#2-4-6-状态图-State-Diagram" class="headerlink" title="2.4.6 状态图 State Diagram"></a>2.4.6 状态图 State Diagram</h5><ul><li>动态图，展现了一个状态机，描述单个对象在多个用例中的行为。包括简单状态和组合状态</li><li>转换可以通过事件触发器触发，事件出发后响应的监护条件会进行检查</li><li>状态图中转换和状态是两个独立的概念</li><li>方框：表示状态 箭头：触发事件 实心圆点：起点和终点<br><img src="/./images/d8-16.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-7-活动图-Activity-Diagram"><a href="#2-4-7-活动图-Activity-Diagram" class="headerlink" title="2.4.7 活动图 Activity Diagram"></a>2.4.7 活动图 Activity Diagram</h5><ul><li>动态图，是一种特殊的状态图，展现了系统内从一个活动到另一个活动的流程</li><li>活动的分岔和汇合线是一条水平粗线</li><li>并发分岔、并发汇合、监护表达式、分支、流</li><li>每个分岔的分支数代表了可同时运行的线程数。</li><li>活动中能够并行执行的是在一个分岔粗线下的分支活动<br><img src="/./images/d8-17.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-8-组件图（构件图）Component-Diagram"><a href="#2-4-8-组件图（构件图）Component-Diagram" class="headerlink" title="2.4.8 组件图（构件图）Component Diagram"></a>2.4.8 组件图（构件图）Component Diagram</h5><ul><li>静态图，为系统静态实现视图。展现了一组组件（或构件）之间的组织和依赖<br><img src="/./images/d8-18.png" alt="软件设计师教程知识点整理"></li></ul><h5 id="2-4-9-部署图-Deployment-Diagram"><a href="#2-4-9-部署图-Deployment-Diagram" class="headerlink" title="2.4.9 部署图 Deployment Diagram"></a>2.4.9 部署图 Deployment Diagram</h5><ul><li>静态图，系统的静态部署图，部署物理模块的节点分布。</li><li>与组件图相关，通常是一个几点包含一个或多个组件。依赖关系类似于包依赖，因此部署组件之间的依赖是单向的类似于包含关系</li></ul><p><img src="/./images/d8-19.png" alt="软件设计师教程知识点整理"></p><h2 id="3-设计模式"><a href="#3-设计模式" class="headerlink" title="3. 设计模式"></a>3. 设计模式</h2><p><img src="/./images/d8-20.png" alt="软件设计师教程知识点整理"></p><h3 id="3-1-设计模式概念"><a href="#3-1-设计模式概念" class="headerlink" title="3.1 设计模式概念"></a>3.1 设计模式概念</h3><p><img src="/./images/d8-5.png" alt="软件设计师教程知识点整理"></p><h3 id="3-2-设计模式分类"><a href="#3-2-设计模式分类" class="headerlink" title="3.2 设计模式分类"></a>3.2 设计模式分类</h3><ul><li>创建型设计模式<br><img src="/./images/d8-4.png" alt="软件设计师教程知识点整理"></li><li>结构型型设计模式<br><img src="/./images/d8-3.png" alt="软件设计师教程知识点整理"></li><li>行为型设计模式<br><img src="/./images/d8-2.png" alt="软件设计师教程知识点整理"><br><img src="/./images/d8-1.png" alt="软件设计师教程知识点整理"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第11章 标准化和软件知识产权基础知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC11%E7%AB%A0%E6%A0%87%E5%87%86%E5%8C%96%E5%92%8C%E8%BD%AF%E4%BB%B6%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC11%E7%AB%A0%E6%A0%87%E5%87%86%E5%8C%96%E5%92%8C%E8%BD%AF%E4%BB%B6%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第11章标准化和软件知识产权基础知识"><a href="#第11章标准化和软件知识产权基础知识" class="headerlink" title="第11章标准化和软件知识产权基础知识"></a>第11章标准化和软件知识产权基础知识</h1><h2 id="一-知识产权的基础知识"><a href="#一-知识产权的基础知识" class="headerlink" title="一.知识产权的基础知识"></a>一.知识产权的基础知识</h2><h3 id="1-知识产权的保护期限"><a href="#1-知识产权的保护期限" class="headerlink" title="1. 知识产权的保护期限"></a>1. 知识产权的保护期限</h3><ul><li>当以单位为主体时，是没有署名权和修改权的，因为属于集体<br><img src="/./images/11-1.png" alt="软件设计师教程知识点整理"></li></ul><h3 id="2-知识产权人的确定"><a href="#2-知识产权人的确定" class="headerlink" title="2. 知识产权人的确定"></a>2. 知识产权人的确定</h3><ul><li><p>著作权和专利权 在 单位和个人情况下的归属<br><img src="/./images/11-2.png" alt="软件设计师教程知识点整理"></p></li><li><p>单位和委托的区别在于，当合同中未确定著作权归属是，著作权默认归于单位，而委托创作中，著作权默认过属于创作方个人<br><img src="/./images/11-3.png" alt="软件设计师教程知识点整理"></p></li></ul><h3 id="3-侵权判定"><a href="#3-侵权判定" class="headerlink" title="3. 侵权判定"></a>3. 侵权判定</h3><ul><li><p>个人未发表的东西被抢先发表属于侵权<br><img src="/./images/11-4.png" alt="软件设计师教程知识点整理"></p></li><li><p>只要不进行传播、公开发表、盈利都不算侵权，具体如下：、<br><img src="/./images/11-5.png" alt="软件设计师教程知识点整理"></p></li></ul><h3 id="4-相关法律名词解释"><a href="#4-相关法律名词解释" class="headerlink" title="4. 相关法律名词解释"></a>4. 相关法律名词解释</h3><p><img src="/./images/11-6.png" alt="软件设计师教程知识点整理"></p><h3 id="二-标准化基础知识"><a href="#二-标准化基础知识" class="headerlink" title="二 标准化基础知识"></a>二 标准化基础知识</h3><h3 id="1-标准的分类"><a href="#1-标准的分类" class="headerlink" title="1. 标准的分类"></a>1. 标准的分类</h3><p><img src="/./images/11-7.png" alt="软件设计师教程知识点整理"></p><h3 id="2-标准的编号"><a href="#2-标准的编号" class="headerlink" title="2. 标准的编号"></a>2. 标准的编号</h3><p><img src="/./images/11-8.png" alt="软件设计师教程知识点整理"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第10章 网路与信息安全基础知识</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC10%E7%AB%A0%E7%BD%91%E8%B7%AF%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC10%E7%AB%A0%E7%BD%91%E8%B7%AF%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="第10章网路与信息安全基础知识"><a href="#第10章网路与信息安全基础知识" class="headerlink" title="第10章网路与信息安全基础知识"></a>第10章网路与信息安全基础知识</h1><h2 id="一．计算机网络概念"><a href="#一．计算机网络概念" class="headerlink" title="一．计算机网络概念"></a>一．计算机网络概念</h2><h3 id="1-计算机网络概念"><a href="#1-计算机网络概念" class="headerlink" title="1. 计算机网络概念"></a>1. 计算机网络概念</h3><ul><li><p>计算机网络是计算机技术与通信技术相结合的产物，他实现了远程通信、远程信息处理和资源共享</p></li><li><p>计算机网络功能：数据通信、资源共享、负载均衡、高可靠性</p></li></ul><h3 id="2-网络分类："><a href="#2-网络分类：" class="headerlink" title="2. 网络分类："></a>2. 网络分类：</h3><table width="568">    <tbody>        <tr style="height:21px" class="firstRow">            <td width="114" valign="center" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">网络分类</span>                </p>            </td>            <td width="78" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">缩写</span>                </p>            </td>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">分布距离</span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">计算机分布范围</span>                </p>            </td>            <td width="126" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">阐述速率范围</span>                </p>            </td>        </tr>        <tr>            <td width="114" valign="center" rowspan="3" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">局域网</span>                </p>            </td>            <td width="78" valign="center" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">LAN</span>                </p>            </td>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">10m<span style="font-family:宋体">左右</span></span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">房间</span>                </p>            </td>            <td width="126" valign="center" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">4mbpx~1Gbps</span>                </p>            </td>        </tr>        <tr>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">100m<span style="font-family:宋体">左右</span></span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">楼宇</span>                </p>            </td>        </tr>        <tr>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">1000m<span style="font-family:宋体">左右</span></span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">校园</span>                </p>            </td>        </tr>        <tr>            <td width="114" valign="center" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">城域网</span>                </p>            </td>            <td width="78" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">MAN</span>                </p>            </td>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">10KM</span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">城市</span>                </p>            </td>            <td width="126" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">50Kbps~100Mbps</span>                </p>            </td>        </tr>        <tr>            <td width="114" valign="center" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">广域网</span>                </p>            </td>            <td width="78" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">WAN</span>                </p>            </td>            <td width="114" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">100KM<span style="font-family:宋体">以上</span></span>                </p>            </td>            <td width="136" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">国家或全球</span>                </p>            </td>            <td width="126" valign="center" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:justify;text-justify:inter-ideograph">                    <span style=";font-family:宋体;font-size:14px">9.6Kbps~45Mbps</span>                </p>            </td>        </tr>    </tbody></table><h3 id="3-网络拓扑结构："><a href="#3-网络拓扑结构：" class="headerlink" title="3. 网络拓扑结构："></a>3. 网络拓扑结构：</h3><p><img src="/./images/10-1.png" alt="软件设计师教程知识点整理"></p><ul><li>总线型：利用率低、干扰大、价格低</li><li>星型：交换机形成的局域网、中央单元负荷大</li><li>环型：流动方向固定、效率扩充难</li><li>树型：总线型的扩充、分级结构</li><li>分布式：任意节点连接、管理难成本高</li></ul><h3 id="4-网路体系结构"><a href="#4-网路体系结构" class="headerlink" title="4. 网路体系结构"></a>4. 网路体系结构</h3><ul><li>七层网络模型（OSI&#x2F;RM）（由ISO&#x2F;OSI 组织发布）<table width="560">  <tbody>      <tr style="height:19px" class="firstRow">          <td width="118" valign="top" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">七层模型</span></strong>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">传输方式</span></strong>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">1<span style="font-family:宋体">应用层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">实现具体的应用功能，直接进程间的通信</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">2<span style="font-family:宋体">表示层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">数据间格式转换、压缩、加密等操作，对数据进行处理</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">3<span style="font-family:宋体">会话层</span></span><span style="font-family: 宋体;font-size: 14px">会话</span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">会话管理服务：建立、维护、结束回话</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">4<span style="font-family:宋体">传输层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">端口到端口的链接，传送数据到主机端口上</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">5<span style="font-family:宋体">网络层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">分组传输和路由选择，准确传送至互联网网络主机上</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">6<span style="font-family:宋体">数据链路层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">封装成帧传送，准确传送至局域网内的物理主机上</span>              </p>          </td>      </tr>      <tr>          <td width="118" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">7<span style="font-family:宋体">物理层</span></span>              </p>          </td>          <td width="442" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">二进制传输，物理链路和物理特性相关</span>              </p>          </td>      </tr>  </tbody></table></li></ul><h2 id="二．网络互联硬件"><a href="#二．网络互联硬件" class="headerlink" title="二．网络互联硬件"></a>二．网络互联硬件</h2><ul><li><p>网络设备</p><table width="566">  <tbody>      <tr style="height:19px" class="firstRow">          <td width="566" valign="top" colspan="2" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">七层模型硬件</span></strong>              </p>          </td>      </tr>      <tr>          <td width="140" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">1<span style="font-family:宋体">应用层</span></span>              </p>          </td>          <td width="426" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网关（连</span><span style="font-family: 宋体;font-size: 14px">不同型</span><span style="font-family: 宋体;font-size: 14px">且协议差别较大的网络，协议转换）</span>              </p>          </td>      </tr>      <tr>          <td width="140" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">5<span style="font-family:宋体">网络层</span></span>              </p>          </td>          <td width="426" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">路由器（连接多个逻辑上分开的网络，路由选择）</span>              </p>          </td>      </tr>      <tr>          <td width="140" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">6<span style="font-family:宋体">数据链路层</span></span>              </p>          </td>          <td width="426" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网桥（分析帧地址）、交换机（多口网桥，<span style="font-family:Calibri">Mac</span><span style="font-family:宋体">地址表）</span></span>              </p>          </td>      </tr>      <tr>          <td width="140" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">7<span style="font-family:宋体">物理层</span></span>              </p>          </td>          <td width="426" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">中继器（扩大信号）、集线器<span style="font-family:Calibri">Hub(</span><span style="font-family:宋体">多路中继器</span><span style="font-family:Calibri">)</span></span>              </p>          </td>      </tr>  </tbody></table></li><li><p>传输介质：<br>有线介质：双绞线（最长100m,每端一RJ45插件），同轴电缆，光纤<br>无线介质：微波、红外线和激光、卫星通信</p></li><li><p>组建网络：<br>服务器、客户端、网络设备、通信介质、网络软件</p></li></ul><h2 id="三．网络协议"><a href="#三．网络协议" class="headerlink" title="三．网络协议"></a>三．网络协议</h2><h3 id="1-局域网协议：b-为bit，不是-字节byte"><a href="#1-局域网协议：b-为bit，不是-字节byte" class="headerlink" title="1. 局域网协议：b 为bit，不是 字节byte"></a>1. 局域网协议：b 为bit，不是 字节byte</h3><p>IEEE802.3 标准以太网（CSMA&#x2F;CD）,速度为 10Mbps,传输介质为同轴电缆<br>IEEE802.3u 快速以太网（CSMA&#x2F;CD）,速度为 100Mbps,传输介质为双绞线<br>IEEE802.3z 千兆以太网（CSMA&#x2F;CD）,速度为 1000Mbps,传输介质为同轴电缆<br>IEEE802.4 令牌总线网<br>IEEE802.5 令牌环网<br>无线局域网CSMA&#x2F;CA（载波监听多路访问方法）</p><h3 id="2-广域网协议："><a href="#2-广域网协议：" class="headerlink" title="2. 广域网协议："></a>2. 广域网协议：</h3><p>点对点协议PPP（拨号上网），数字用户线xDSL（ADSL上传网速和下载网速不对等，下载网速一般很快），数字专线DDN（长途的数据电路），帧中继（以帧为传输单位）</p><h3 id="3．TCP-IP协议族"><a href="#3．TCP-IP协议族" class="headerlink" title="3．TCP&#x2F;IP协议族"></a>3．TCP&#x2F;IP协议族</h3><ul><li><p>特性：<br>逻辑编址、路由选择、域名解析、错误检测和流量控制</p></li><li><p>3.1 TCP&#x2F;IP模型：<br>应用层：具体应用功能<br>传输层：应用程序间端口到端口的通信<br>网际层：又称IP层，处理机器间的通信，数据以组为单位<br>网络接口层协议：称为数据链路层，负责接收IP数据报，并把数据报通过选定的网络发送出去</p><table>  <tbody>      <tr style="height:19px" class="firstRow">          <td width="82" valign="top" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">ISO<span style="font-family:宋体">模型</span></span></strong>              </p>          </td>          <td width="395" valign="top" colspan="5" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">TCP/IP<span style="font-family:宋体">协议</span></span></strong>              </p>          </td>          <td width="80" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p style="text-align:center">                  <strong><span style="font-family: 宋体;font-size: 14px">TCP/IP<span style="font-family:宋体">模型</span></span></strong>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">1<span style="font-family:宋体">应用层</span></span>              </p>          </td>          <td width="81" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">&nbsp;</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">文件传输</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">FTP</span>              </p>          </td>          <td width="81" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">远程登录</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">Telnet</span>              </p>          </td>          <td width="81" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">电子邮件</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">SMTP</span>              </p>          </td>          <td width="81" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网络文件</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">服务</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">NFS</span>              </p>          </td>          <td width="70" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网络管理</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">SNMP</span>              </p>          </td>          <td width="80" valign="top" rowspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">应用层</span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">2<span style="font-family:宋体">表示层</span></span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">3<span style="font-family:宋体">会话层</span></span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">4<span style="font-family:宋体">传输层</span></span>              </p>          </td>          <td width="395" valign="top" colspan="5" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p style="text-align:center">                  <span style="font-family: 宋体;font-size: 14px">TCP UDP</span>              </p>          </td>          <td width="80" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">传输层</span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">5<span style="font-family:宋体">网络层</span></span>              </p>          </td>          <td width="395" valign="top" colspan="5" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p style="text-align:center">                  <span style="font-family: 宋体;font-size: 14px">&nbsp;IP ICMP ARP RARP</span>              </p>          </td>          <td width="80" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网际层</span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">6<span style="font-family:宋体">数据链路层</span></span>              </p>          </td>          <td width="81" valign="top" rowspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">Ethernet</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">IEEE802.3</span>              </p>          </td>          <td width="81" valign="top" rowspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">FDDI</span>              </p>          </td>          <td width="81" valign="top" rowspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">Ethernet</span>              </p>              <p>                  <span style="font-family: 宋体;font-size: 14px">IEEE802.5</span>              </p>          </td>          <td width="81" valign="top" rowspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">ARCnet</span>              </p>          </td>          <td width="70" valign="top" rowspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">PPP/SLIP</span>              </p>          </td>          <td width="80" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">网络接口层</span>              </p>          </td>      </tr>      <tr>          <td width="82" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">7<span style="font-family:宋体">物理层</span></span>              </p>          </td>          <td width="91" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style="font-family: 宋体;font-size: 14px">硬件层</span>              </p>          </td>      </tr>  </tbody></table></li><li><p>3.2 网络接口层协议：PPP&#x2F;FDDI….</p></li><li><p>3.3 网际层协议</p><ul><li>IP：最重要很细的协议，无连接、不可靠</li><li>ICMP：因特网控制信息协议，用来检测网络通信是否通畅</li><li>ARP和RARP：地址解析协议，ARP将ip地转换为物理地址，RARP是将物理地址转换为IP地址</li></ul></li><li><p>3.4 传输层协议 TCP</p></li><li><p>3.5 传输层协议 UDP</p>  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UDP协议：不可靠连接，因为数据传输只管发送，不用对方确认，因此可能会有丢包现象，一般用于视频、音频数据传输</span><br><span class="line">TCP协议：可靠连接，因为有验证机制，每发送一个数据包，都要求对方回复确认，三次握手机制</span><br><span class="line">1.停止等待协议：TCP保证可靠传输的协议，就是发送完一个分组就停止发送，等待对方的确认，只有对方确认过，才发送下一个分组</span><br><span class="line">2.连续ARQ协议：TCP保证可靠传输的协议，发送方维持一个窗口，这个窗口有多个分组，窗口大小由接收方返回的WIN值决定，所以窗口是动态变化的，大大提高了通道利用率，并且采用累积确认的方式，对按序到达的最后一个分组发送确认</span><br><span class="line">3.滑动窗口协议：TCP流量控制协议，该协议允许发送方在停止并等待确认前发送多个数据分组，不用停下来等待确认，因此可以加速数据的传输还可以控制流量的问题</span><br></pre></td></tr></table></figure></li><li><p>3.6 应用层协议：</p><ul><li><p>可靠传输：基于TCP的FTP&#x2F;HTTP&#x2F;HTTPS&#x2F;SMTP&#x2F;POP3&#x2F;TELNET等</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FTP：可靠的文本传输协议基于TCPP</span><br><span class="line">HTTP：超文本传输协议，用于上网，使用ssl加密后的安全网页协议为HTTPS基于TCP</span><br><span class="line">SMTP和POP3：邮件传输协议，邮件报文采用ASCII格式表示基于TCP</span><br><span class="line">Telnet：远程传输协议 基于TCP</span><br></pre></td></tr></table></figure></li><li><p>不可靠传输：基于UDP的TFTP&#x2F;SNMP&#x2F;DHCP&#x2F;DNS等</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TFTP：不可靠的小文件传输协议 基于UDP</span><br><span class="line">SNMP：简单网络管理协议，必须以管理员的身份登录才能完成配置 基于UDP</span><br><span class="line">DHCP：动态分配IP地址协议，客户机/服务器模型，租约默认为8天，当租约过半时，客户机需要向DHCP服务器申请续约，当租约超过87.5%时，如果仍然没有和当初提供IP地址的DHCP服务器联系上，择开始联系其他DHCP服务器 基于UDP</span><br><span class="line">可以从DHCP服务器获取DHCP服务器IP，DNS服务器IP地址，默认网关IP</span><br><span class="line">DNS：域名解析协议，将域名解析为IP地址 基于UDP</span><br><span class="line">DNS服务器：维持ip地址对应的代表，层次结构为：本地域名服务器、权威域名服务器、顶级域名服务器、根域名服务器</span><br><span class="line">DNS递归查询，主机提出一个查询请求，本地服务器会一层一层的查询下去，直接找到满足查询请求的IP地址，再返回给主机，即问一次就得到最终结果</span><br><span class="line">DNS迭代查询：服务器收到一次请求，就回答一次，但是回答的不一定是最终地址，也可能是其他服务器的地址，需要客户机再次发出请求，直至问道最终结果</span><br><span class="line">主机箱本地域名服务器查询采用递归查询；本地域名服务器箱根域名服务器的查询通常采用迭代查询（依据的是域名服务器是否空闲）</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="四-Internet-及应用"><a href="#四-Internet-及应用" class="headerlink" title="四 Internet 及应用"></a>四 Internet 及应用</h2><h3 id="1．路由选择策略"><a href="#1．路由选择策略" class="headerlink" title="1．路由选择策略"></a>1．路由选择策略</h3><ul><li><p>静态路由选择</p><ul><li>不能根据网络流量和拓扑结构的变化来调整自身的路由表，也就不能找出最佳路由</li><li>固定式路由选择：每个网络节点存储一张表格，表格中每一项记录着对应某个目的下一节点或链路，当一个分组到达某节点时，该节点只要根据分组上的地址信息，便可以从固定的路由表中查出对应的目的节点及所应选择的下一节点。</li><li>洪泛式路由选择：又叫扩散法，一个分组路由源站发送到与其相邻的所有节点，最先到达目的节点的一个或若干个分组肯定经过了最短的路径，其主要应用在诸如军事网络等强壮性要求很高的场合</li><li>随机路由选择：一个分组只在与其相邻的节点中随机的选择一条转发</li></ul></li><li><p>动态路由选择</p><ul><li>节点的路由选择依靠网络当前的状态信息来决定，这种策略能较好地适应网络流量、拓扑结构的变化，有利于改善网络的性能。算法复杂，会增加网络的负担</li><li>分布式路由选择：①距离向量算法（各节点周期性的向所有相邻节点发送路由刷新报文）②链路状态算法（各节点独立计算最短通路、能够快速适应网络变化、交换的路由信息少，复杂难以实现）</li><li>集中式路由选择：有网络控制中心负责全网状态信息的收集、路由计算及最佳路由的实现。最简单的方法是将最新路由定期发送到网络中各节点上去。</li><li>混合式动态路由选择：将分布路由选择与集中路由选择、以及其它路由选择方法混合使用。</li></ul></li></ul><h3 id="2．IP地址"><a href="#2．IP地址" class="headerlink" title="2．IP地址"></a>2．IP地址</h3><ul><li>2.1 IPV4分类编址<br>格式：IP地址分四段，每段8位，共32位二进制数组成<br>逻辑上分为网络号和主机号（主机号全0或全1不能分配，是特殊地址）<table width="415">  <tbody>      <tr class="firstRow">          <td width="77" valign="top" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">类别</span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;"></td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">网络号</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">主机号</span>              </p>          </td>      </tr>      <tr>          <td width="77" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">A<span style="font-family:宋体">类</span></span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">0.0.0.0-127.255.255.255</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">8<span style="font-family:宋体">位</span></span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">24<span style="font-family:宋体">位</span></span>              </p>          </td>      </tr>      <tr>          <td width="77" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">B<span style="font-family:宋体">类</span></span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">128.0.0.0-191.255.255.255</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">16<span style="font-family:宋体">位</span></span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">16<span style="font-family:宋体">位</span></span>              </p>          </td>      </tr>      <tr>          <td width="77" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">C<span style="font-family:宋体">类</span></span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">192.0.0.0-223.255.255.255</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">24<span style="font-family:宋体">位</span></span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">8<span style="font-family:宋体">位</span></span>              </p>          </td>      </tr>      <tr>          <td width="77" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">D<span style="font-family:宋体">类组播</span></span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">224.0.0.0-239.255.255.255</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;"></td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;"></td>      </tr>      <tr>          <td width="77" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">E<span style="font-family:宋体">类保留</span></span>              </p>          </td>          <td width="184" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">240.0.0.0-255.255.255.255</span>              </p>          </td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;"></td>          <td width="77" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;"></td>      </tr>  </tbody></table></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ABC类规则划分为：网络号 + 主机号</span><br><span class="line">按照ABC类规则，将主机号拆分为：子网号+主机号 用于划分子网</span><br><span class="line">子网：网络号+子网号+主机号</span><br><span class="line">网络号全为1，主机号全为0，这样的地址为子网掩码</span><br><span class="line">注意：子网号可以为全0或全1，主机号不能为全0或全1，因此主机需要-2，而子网不用</span><br></pre></td></tr></table></figure><p><img src="/./images/10-2.png" alt="软件设计师教程知识点整理"></p><ul><li><p>2.2 IPV4无分类编址<br>格式：IP地址&#x2F;网络号<br>示例：128.168.0.11&#x2F;20 标识IP地址为128.168.0.11，其网络号占20位，因此主机号占32-20&#x3D;12位，也可以划分子网。</p><table width="568">  <tbody>      <tr class="firstRow">          <td width="284" valign="top" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">IP</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">说明</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">127<span style="font-family:宋体">网段</span></span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">回播地址</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">网络号全<span style="font-family:Calibri">0</span><span style="font-family:宋体">地址</span></span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">当前子网中的主机</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">全<span style="font-family:Calibri">1</span><span style="font-family:宋体">地址</span></span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">本地子网中的广播</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">主机号全<span style="font-family:Calibri">1</span><span style="font-family:宋体">地址</span></span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">特定子网中的广播</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">10.0.0.0/8</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">10.0.0.0-10.255.255.254</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">172.16.0.0/12</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">172.16.0.1-172.31.255.254</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">192.168.0.0/16</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">192.168.0.1-192.168.255.254</span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">169.254.0.0</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">保留地址，用于<span style="font-family:Calibri">DHCP</span><span style="font-family:宋体">失效（</span><span style="font-family:Calibri">win</span><span style="font-family:宋体">）</span></span>              </p>          </td>      </tr>      <tr>          <td width="284" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">0.0.0.0</span>              </p>          </td>          <td width="284" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">              <p>                  <span style=";font-family:宋体;font-size:14px">保留地址，用于<span style="font-family:Calibri">DHCP</span><span style="font-family:宋体">失效（</span><span style="font-family:Calibri">Linux</span><span style="font-family:宋体">）</span></span>              </p>          </td>      </tr>  </tbody></table></li><li><p>2.3 IPV6<br>主要是为了解决IPv4地址数量不够用而设计的<br>特性：①地址长度128位，地址空间增大了2^96倍<br>②灵活的IP报文头部格式，使用一系列固定格式的扩展头部取代了IPv4中可变长度的选项字段。选项部分出现格式也有所变化，使路由器可以简单撸过选项而不做任何处理，加快了报文处理速度<br>③简化了报文头部格式，加快报文转发，提高了吞吐量<br>④提高安全性，身份认证和隐私权是v6的关键特性<br>⑤支持更多的服务类型<br>⑥允许协议继续演变，增加新的功能，使之适应未来技术的发展</p></li><li><p>2.4 IPV4 过渡到 IPV6：<br>①双协议栈：主机同时运行IPV4和IPV6两套协议栈，同时支持两套协议<br>②隧道技术：用于在IPV4网络之上连接IPV6的站点，站点可以是一个或多个主机<br>③翻译技术：利用转换网关来在IPV4和IPV6网络之间转换报头地址，同时根据协议不同做对应的语义翻译，从而使纯IPV4和纯IPV6站点之间能够透明通用</p></li></ul><h3 id="3-常用应用"><a href="#3-常用应用" class="headerlink" title="3. 常用应用"></a>3. 常用应用</h3><ul><li><p>3.1 层次化网络模型从下至上分为三层：<br>接入层：功能单一，向本地网段提供用户接入<br>汇聚层：功能多样，可以有多层，包括网络访问策略、数据包的处理、过滤、地址等中间操作<br>核心层：功能单一，只负责高速的数据交换</p></li><li><p>3.2 网络地址翻译NAT：<br>公司内容有很多电脑，但是使用少量IP地址访问因特网<br>大量内网IP地址集合 映射到 少量因特网IP地址集合就称为NAT<br>可以大大减少IP地址的使用量</p></li><li><p>3.3 默认网关：<br>一台主机可以有多个网关。默认网关是指找不到可用的网关，九堡数据包发给默认指定的网关，由这个网关来处理数据包。现在主机使用的网关一般指的就是默认网关<br>默认网关的IP地址必须与本机IP地址在同一网段内，即同网络号</p></li><li><p>3.4 冲突域和广播域：<br>路由器可以阻断广播域和冲突域；交换机只能阻断冲突域<br>路由器下可以划分多个广播域和多个冲突域；一个交换机整体是一个广播域，可划分多个冲突域<br>物理层设备集线器下整体作为一个冲突域和一个广播域</p></li><li><p>3.5 虚拟局域网VLAN：<br>VLAN是建立在物理网络基础上的一种逻辑子网。通过虚拟技术，把局域网（LAN）划分成好几个不同的VLAN，而且使得网络接入不再局限于物理地址上的约束。VLAN内部可以相互沟通，不过VLAN之间不能直接沟通，必须经过特殊设置的路由器才可以。<br>  这样做的实际意义主要有两个。一个是通过分割，在较大的LAN中创建不同的VLAN，可以抵御广播风暴的影响，同时可以多设置防火墙来大大提高网络的安全性。另外一个是有助于提高工作效率和接入速度。<br>虚拟专用网VPN:<br>是在公用网络上建立专用网络的技术，其之所以成为虚拟网，主要是因为整个VPN网络的任意两个节点之间的网络并没有传统专用所需的端到端的物理链路，而是架构在用公用网络服务商所提供的网络平台，如Internet、atm（异步传输模式）、frame relay等之上的逻辑网络，用户数据在路基链路中传输。</p></li></ul><h2 id="六．网络安全"><a href="#六．网络安全" class="headerlink" title="六．网络安全"></a>六．网络安全</h2><table width="443">    <tbody>        <tr class="firstRow">            <td width="135" valign="top" rowspan="3" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">Pgp,HTTPS</span>                </p>            </td>            <td width="129" valign="top" rowspan="4" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">SSL<span style="font-family:宋体">协议</span></span>                </p>            </td>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">应用层</span>                </p>            </td>        </tr>        <tr>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">表示层</span>                </p>            </td>        </tr>        <tr style="height:19px">            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">会话层</span>                </p>            </td>        </tr>        <tr>            <td width="135" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">TLS &nbsp;&nbsp;SET</span>                </p>            </td>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">传输层</span>                </p>            </td>        </tr>        <tr style="height:21px">            <td width="264" valign="top" colspan="2" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">防火墙 <span style="font-family:Calibri">IPSec</span></span>                </p>            </td>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">网络层</span>                </p>            </td>        </tr>        <tr>            <td width="264" valign="top" colspan="2" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">链路加密 <span style="font-family:Calibri">PPTP L2TP</span></span>                </p>            </td>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">数据链路层</span>                </p>            </td>        </tr>        <tr>            <td width="264" valign="top" colspan="2" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">隔离 屏蔽</span>                </p>            </td>            <td width="179" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p>                    <span style=";font-family:宋体;font-size:14px">物理层</span>                </p>            </td>        </tr>    </tbody></table><ul><li>SSL协议用于网银交易</li><li>用户和服务器的合法性验证</li><li>加密数据以隐藏被传输的数据</li><li>保护数据的完整性</li></ul><h3 id="1．防火墙"><a href="#1．防火墙" class="headerlink" title="1．防火墙"></a>1．防火墙</h3><ul><li><p>概念：是在内部网络和外部因特网之间增加的一道安全防护措施，它认为内部网络是安全的，外部网络是不安全的。分为网络级防火墙和应用级防火墙，两级之间的安全手段如下：</p></li><li><p>网络技术防火墙：<br>层次低，但是效率高，使用包过滤及状态监测手段，若异常过滤掉，不与内网通信，不拆分包</p></li><li><p>应用级防火墙：<br>层次高，效率低，拆分包，具体检查里面的数据，会消耗大量的时间，但安全性高</p></li><li><p>屏蔽子网方法：<br>在内网和外网之间增加一个屏蔽子网，称为DMZ非军事区，内网和外网通信必须多经过一道防火墙，屏蔽子网中一般存放的是邮件服务器、WEB服务器这些内外网数据交互服务器，可以屏蔽掉一些内部攻击，但是无法全部屏蔽内部攻击</p></li></ul><h3 id="2．计算机的病毒和木马"><a href="#2．计算机的病毒和木马" class="headerlink" title="2．计算机的病毒和木马"></a>2．计算机的病毒和木马</h3><ul><li>病毒：编制或者在计算机程序中插入的破坏计算机功能或者破坏数据，影响计算机使用并且能够自我复制的一组计算机指令或者程序代码<br>病毒具有传染性、隐蔽性、潜伏性、破坏性、针对性、衍生性、寄生性、未知性</li><li>木马：是一种后门程序，被黑客用作控制远程计算机的工具，隐藏在被控制电脑上的一个小程序监控电脑一切操作并盗取信息<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">常见种类：</span><br><span class="line">系统引导型病毒</span><br><span class="line">文件外壳型病毒</span><br><span class="line">目录性病毒</span><br><span class="line">蠕虫病毒（感染exe文件）：爱虫病毒、熊猫烧香、罗密欧与朱丽叶、恶鹰、尼姆达、冲击波</span><br><span class="line">木马：QQ消息尾巴木马，特洛伊木马</span><br><span class="line">宏病毒（感染WORD，EXCLE等文件中的宏变量）：美丽沙、台湾1号</span><br><span class="line">CIH病毒：史上唯一破坏硬件的病毒</span><br><span class="line">红色代码：蠕虫病毒+木马</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第12章软件系统分析与设计</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC12%E7%AB%A0%E8%BD%AF%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E7%AC%AC12%E7%AB%A0%E8%BD%AF%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="第12章软件系统分析与设计"><a href="#第12章软件系统分析与设计" class="headerlink" title="第12章软件系统分析与设计"></a>第12章软件系统分析与设计</h1><h2 id="二-数据库分析和设计"><a href="#二-数据库分析和设计" class="headerlink" title="二 数据库分析和设计"></a>二 数据库分析和设计</h2><h3 id="1-数据库的设计步骤"><a href="#1-数据库的设计步骤" class="headerlink" title="1. 数据库的设计步骤"></a>1. 数据库的设计步骤</h3><table width="635">    <tbody>        <tr style="height:43px" class="firstRow">            <td width="173" valign="top" colspan="5" style="padding: 0px 7px; border-width: 1px; border-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">需求分析阶段</span>                </p>            </td>            <td width="136" valign="top" colspan="4" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">概念结构设计阶段</span>                </p>            </td>            <td width="148" valign="top" colspan="4" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">逻辑结构设计阶段</span>                </p>            </td>            <td width="69" valign="top" colspan="2" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">物理设计阶段</span>                </p>            </td>            <td width="109" valign="top" colspan="3" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="text-align:center">                    <span style=";font-family:宋体;font-size:14px">数据库实施</span>                </p>            </td>        </tr>        <tr style="height:240px">            <td width="35" valign="top" style="padding: 0px 7px; border-left-width: 1px; border-left-color: windowtext; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">调查机构情况</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">熟悉业务活动</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">明确用户需求</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">分析系统功能</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top: none; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">编写分析报告</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">抽象数据</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">设计局部视图</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">合并取消冲突</span>                </p>            </td>            <td width="32" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">修改重构消除冗余</span>                </p>            </td>            <td width="37" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">转化为数据模型</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">关系规范化</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">模式优化</span>                </p>            </td>            <td width="41" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">设计用户子模型</span>                </p>            </td>            <td width="36" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">确定数据库物理模型</span>                </p>            </td>            <td width="32" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">评价数据库物理模型</span>                </p>            </td>            <td width="40" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">定义数据库</span>                </p>            </td>            <td width="35" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">数据库装入<span style="font-family:Calibri">/</span><span style="font-family:宋体">编写应用程序</span></span>                </p>            </td>            <td width="34" valign="top" style="padding: 0px 7px; border-left: none; border-right-width: 1px; border-right-color: windowtext; border-top-width: 1px; border-top-color: windowtext; border-bottom-width: 1px; border-bottom-color: windowtext;">                <p style="margin-right:8px;margin-left:8px">                    <span style=";font-family:宋体;font-size:14px">数据库试运行</span>                </p>            </td>        </tr>    </tbody></table><p>    <br/></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多媒体</title>
      <link href="/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
      <url>/2023/10/04/Markdown%E7%89%88%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/%E5%A4%9A%E5%AA%92%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h1><h2 id="一．多媒体基本概念"><a href="#一．多媒体基本概念" class="headerlink" title="一．多媒体基本概念"></a>一．多媒体基本概念</h2><ul><li>多媒体分类：</li></ul><h3 id="1-感觉媒体：使人直接产生感觉的媒体，如：视觉，听觉、触觉等"><a href="#1-感觉媒体：使人直接产生感觉的媒体，如：视觉，听觉、触觉等" class="headerlink" title="1.感觉媒体：使人直接产生感觉的媒体，如：视觉，听觉、触觉等"></a>1.感觉媒体：使人直接产生感觉的媒体，如：视觉，听觉、触觉等</h3><h3 id="2-表示媒体：传输感觉媒体的中介媒体，即用于数据交换的编码。如：文字、图形、动画、音频和视频等"><a href="#2-表示媒体：传输感觉媒体的中介媒体，即用于数据交换的编码。如：文字、图形、动画、音频和视频等" class="headerlink" title="2.表示媒体：传输感觉媒体的中介媒体，即用于数据交换的编码。如：文字、图形、动画、音频和视频等"></a>2.表示媒体：传输感觉媒体的中介媒体，即用于数据交换的编码。如：文字、图形、动画、音频和视频等</h3><h3 id="3-表现媒体：进行信息输入和信息输出的媒体。如：键盘、鼠标、麦克风、显示器、打印机、音响等"><a href="#3-表现媒体：进行信息输入和信息输出的媒体。如：键盘、鼠标、麦克风、显示器、打印机、音响等" class="headerlink" title="3.表现媒体：进行信息输入和信息输出的媒体。如：键盘、鼠标、麦克风、显示器、打印机、音响等"></a>3.表现媒体：进行信息输入和信息输出的媒体。如：键盘、鼠标、麦克风、显示器、打印机、音响等</h3><h3 id="4-存储媒体：存储表现媒体的物理介质。如：磁盘、光盘、内存等"><a href="#4-存储媒体：存储表现媒体的物理介质。如：磁盘、光盘、内存等" class="headerlink" title="4.存储媒体：存储表现媒体的物理介质。如：磁盘、光盘、内存等"></a>4.存储媒体：存储表现媒体的物理介质。如：磁盘、光盘、内存等</h3><h3 id="5-传输媒体：传输表示媒体的物理介质。如：电缆、光纤、双绞线等"><a href="#5-传输媒体：传输表示媒体的物理介质。如：电缆、光纤、双绞线等" class="headerlink" title="5.传输媒体：传输表示媒体的物理介质。如：电缆、光纤、双绞线等"></a>5.传输媒体：传输表示媒体的物理介质。如：电缆、光纤、双绞线等</h3><h2 id="二．声音"><a href="#二．声音" class="headerlink" title="二．声音"></a>二．声音</h2><h3 id="1-声音的基本属性"><a href="#1-声音的基本属性" class="headerlink" title="1. 声音的基本属性"></a>1. 声音的基本属性</h3><ul><li>声音是一种模拟信号，使用带宽形容声音的大小，单位是HZ，需要进行处理转化为数字信号。</li><li>声音转换过程有三个步骤：采样、量化、编码</li><li>人耳能听到的音频信号的频率范围是 <code>20 HZ - 20 KHZ</code></li><li>声音的采样频率一般为最高频率的两倍才能保证不失真</li></ul><h3 id="2-声音的频率计算"><a href="#2-声音的频率计算" class="headerlink" title="2. 声音的频率计算"></a>2. 声音的频率计算</h3><ul><li>未经压缩的数字音频数据的传输率计算公式如下：<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据传输率（bps）= 采样频率（HZ）* 量化位数（bit）* 声道数</span><br></pre></td></tr></table></figure></li><li>生意波形经过数字化后所需占用的存储空间公式如下：<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">声音信号数据量（Byte）= 数据传输率（bps）* 持续时间（s）/ 8</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-声音的合成"><a href="#3-声音的合成" class="headerlink" title="3. 声音的合成"></a>3. 声音的合成</h3><ul><li>数字音乐合成方法<br>数字调频合成法FM：使用高频震荡波的频率按调制信号规律变化的一种调制方式。<br>电子模拟声，能创造出丰富多彩的声音，是真实乐器所不具备的音色。</li><li>波表合成法Wavetable：<br>将各种真实乐器所能发出的所有声音（包括各个音域、声调）录制下来，存储为一个波表文件。<br>播放时，根据MIDI文件记录的乐谱信息向波表发出指令，从波表中逐一找出对应的信息，经过合成、加工后回放出来，合成的音质更好</li></ul><h3 id="4-声音特性："><a href="#4-声音特性：" class="headerlink" title="4.  声音特性："></a>4.  声音特性：</h3><ul><li>音量：即响度，标识声音的强弱程度， 主要取决于声波振幅的大小</li><li>音高：表示各种声音的高低，主要取决于声音的振动频率，真毒频率余越高则音越高</li><li>音调：声音调子的高低，声音本身的频率决定</li><li>音色：音品，有声音波形的谐波频谱和包络决定</li><li>声音文件格式：.wav&#x2F;.snd&#x2F;.au&#x2F;.aif&#x2F;.voc&#x2F;.mp3&#x2F;.ra&#x2F;.mid等</li></ul><h2 id="三．图形和图像"><a href="#三．图形和图像" class="headerlink" title="三．图形和图像"></a>三．图形和图像</h2><h3 id="1-颜色三要素："><a href="#1-颜色三要素：" class="headerlink" title="1.  颜色三要素："></a>1.  颜色三要素：</h3><p>亮度（彩色明暗深浅的程度）、<br>色调（红绿）：颜色的类别、<br>饱和度：某一颜色的深浅程度</p><h3 id="2-色彩空间"><a href="#2-色彩空间" class="headerlink" title="2. 色彩空间"></a>2. 色彩空间</h3><p>彩色空间：即设备显示图片所使用的色彩空间<br>电脑显示器：RGB色彩空间，红、绿、蓝三原色叠加组成</p><p>电视中使用YUV色彩空间：主要兼容黑白电视，使用亮度原理，即不同亮度显示不同颜色</p><p>CMY（CMYK），印刷书籍采用的色彩空间，与RGB相反的减法原理，采用浅蓝、粉红、黄三原色印刷颜料实际上是吸收了本身色彩外的其它颜色<br>HSV（HSB）,艺术家色彩空间，是从艺术的角度划分的</p><h3 id="3-图像的基本特点"><a href="#3-图像的基本特点" class="headerlink" title="3. 图像的基本特点"></a>3. 图像的基本特点</h3><ul><li>图像的属性：分辨率（每英寸像素点数dpi）、像素深度（存储每个像素使用的二进制位数）</li><li>图像文件格式：.bmp&#x2F;.gif&#x2F;.jpg&#x2F;.png&#x2F;.tif&#x2F;.wmf等</li><li>图像深度是图像中记录一个像素点所需要的位数</li><li>显示深度表示显示缓存中记录屏幕上一个点的位数（bit），也即显示器可以显示的颜色数</li><li>水平分辨率：横向上像素点数</li><li>垂直分辨率：纵向上像素点数</li><li>矢量图的基本组成单位是图元，位图的基本组成单位是像素，视频和动画的基本组成单元是帧</li></ul><h2 id="四．多媒体计算"><a href="#四．多媒体计算" class="headerlink" title="四．多媒体计算"></a>四．多媒体计算</h2><h3 id="1-图像容量计算"><a href="#1-图像容量计算" class="headerlink" title="1.图像容量计算"></a>1.图像容量计算</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每个像素16位，图像是640*480像素</span><br><span class="line">容量= 640*480*16/8 = 614400B 字节</span><br><span class="line">640*480像素，256色的图像，求容量</span><br><span class="line">容量=640*480*log2(256)/8 =307200B 字节</span><br></pre></td></tr></table></figure><h3 id="2-音频容量计算"><a href="#2-音频容量计算" class="headerlink" title="2.音频容量计算"></a>2.音频容量计算</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容量=采样频率（HZ）* 量化/采样位数（bit）* 声道数 / 8</span><br></pre></td></tr></table></figure><p>###3.视频容量计算</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容量=每帧图像容量（Byte）* 每秒帧数 * 时间 + 音频容量 * 时间</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
